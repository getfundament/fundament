{"version":3,"sources":["dialog.js"],"names":["$","window","document","Dialog","element","settings","this","config","extend","fn","Name","defaults","elem","$elem","$wrap","class","ClassNames","wrap","role","$dimmer","dimmer","busy","init","Defaults","openFrom","closable","autoFocus","transition","onOpen","onOpening","onClose","onClosing","active","Selectors","block","close","$window","$document","$body","body","transitionEnd","Fm","prototype","setup","bind","conf","length","append","parent","hide","self","on","find","e","stopPropagation","target","toggle","is","open","call","scrollBar","show","addClass","focus","removeClass","one","direction","callback","animation","duration","onEnd","curve","animations","getAnimation","height","css","overflow","padding-right","$outer","width","visibility","appendTo","$inner","outerWidth","remove","first","setting","windowTop","pageYOffset","$location","locationOffset","offset","translation","x","left","y","top","dialog","start","opacity","transform","transform-origin","end","args","each","data","apply","Array","isArray","jQuery"],"mappings":"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","file":"dialog.js","sourcesContent":["/**\n * Dialog plugin.\n *\n * @package Fundament\n */\n;(function($, window, document) {\n    'use strict';\n\n    var Name  = 'dialog';\n\n    var Defaults = {\n        openFrom   : null,\n        closable   : true,\n        autoFocus  : true,\n        transition : 'scale',\n        onOpen     : function() {},\n        onOpening  : function() {},\n        onClose    : function() {},\n        onClosing  : function() {}\n    };\n\n    var ClassNames = {\n        dimmer : 'page-dimmer',\n        wrap   : 'dialog-wrap',\n        active : 'is-active'\n    };\n\n    var Selectors = {\n        dimmer : '.page-dimmer',\n        block  : '.dialog__block',\n        close  : '.dialog__close'\n    };\n\n    // Globals\n\n    var $window   = $(window),\n        $document = $(document),\n        $body     = $(document.body);\n\n    var transitionEnd = Fm.transitionEnd();\n\n    // Constructor\n\n    function Dialog(element, settings) {\n        this.config  = $.extend({}, $.fn[Name].defaults, settings);\n        this.elem    = element;\n        this.$elem   = $(element);\n        this.$wrap   = $('<div/>', {class: ClassNames.wrap, role: 'document'});\n        this.$dimmer = $('<div/>', {class: ClassNames.dimmer});\n        this.busy    = false;\n        this.init();\n    }\n\n    // Prototype\n\n    $.extend(Dialog.prototype, {\n\n        init: function () {\n            this.setup();\n            this.bind();\n        },\n\n        /**\n         * Create and retrieve DOM elements.\n         */\n        setup: function() {\n            var conf = this.config;\n\n            if ($(Selectors.dimmer).length === 0) {\n                $body.append(this.$dimmer);\n            }\n\n            this.$dimmer = $(Selectors.dimmer);\n            this.$wrap = this.$elem\n                .wrap(this.$wrap) // wrap around dialog\n                .parent() // retrieve element\n                .hide();\n\n            if (conf.openFrom) {\n                conf.openFrom = $(conf.openFrom);\n            }\n        },\n\n        /**\n         * Bind event handlers.\n         */\n        bind: function() {\n            var self = this,\n                conf = self.config;\n\n            self.$elem\n                .on('click', Selectors.close, self.close.bind(self))\n                .find(Selectors.block)\n                .on(transitionEnd, function(e) {\n                    e.stopPropagation(); // prevent event bubbling\n                });\n\n            if (conf.closable) {\n                self.$wrap.on('click', function(e) {\n                    if (e.target === this) self.close();\n                });\n            }\n        },\n\n        /**\n         * Toggle the dialog.\n         *\n         * @public\n         */\n        toggle: function () {\n            this.$elem.is(':visible') ?\n                this.close():\n                this.open();\n        },\n\n        /**\n         * Open the dialog.\n         *\n         * @public\n         */\n        open: function () {\n            var self = this;\n\n            if (self.busy) {\n                return;\n            }\n\n            self.config.onOpening.call(self.elem);\n            self.busy = true;\n\n            self.scrollBar(false);\n            self.$dimmer.show();\n            self.$wrap.show();\n            self.$dimmer.addClass(ClassNames.active);\n\n            self.transition('In', function() { // show\n                self.focus();\n                self.config.onOpen.call(self.elem);\n                self.busy = false;\n            });\n        },\n\n        /**\n         * Close the dialog.\n         *\n         * @public\n         */\n        close: function () {\n            var self = this;\n\n            if (self.busy) {\n                return;\n            }\n\n            self.config.onClosing.call(self.elem);\n            self.busy = true;\n\n            self.transition('Out', function() { // hide\n                self.$wrap.hide();\n                self.$dimmer\n                    .removeClass(ClassNames.active)\n                    .one(transitionEnd, function() {\n                        self.scrollBar(true);\n                        self.$dimmer.hide();\n                        self.config.onClose.call(self.elem);\n                        self.busy = false;\n                    });\n            });\n        },\n\n        /**\n         * Transition the dialog.\n         *\n         * @param {string} direction\n         * @param {function} callback\n         */\n        transition: function(direction, callback) {\n            var animation = this.config.transition + direction,\n                settings  = {\n                    duration: $.fn.transition.defaults.duration * 1.5,\n                    onEnd: callback\n                };\n\n            if (this.config.openFrom) {\n                animation = 'dialog' + direction;\n                settings.curve = 'cubic-bezier(0.4,0.7,0.6,1)';\n                settings.animations = this.getAnimation();\n            }\n\n            this.$elem.transition(animation, settings);\n        },\n\n        /**\n         * Show or kill the window's scroll bar.\n         *\n         * @param {boolean} show\n         */\n        scrollBar: function(show) {\n            if ($window.height() >= $document.height()) {\n                return; // no scroll bar present\n            }\n\n            if (show) {\n                $body.css({ // show\n                    'overflow': '',\n                    'padding-right': ''\n                });\n            } else {\n                var $outer = $('<div/>').css({\n                        width: 100,\n                        overflow: 'scroll',\n                        visibility: 'hidden'\n                    }).appendTo($body),\n                    $inner = $('<div/>').css({\n                        width: '100%'\n                    }).appendTo($outer);\n\n                $body.css({ // kill\n                    'overflow': 'hidden',\n                    'padding-right': 100 - $inner.outerWidth() // scroll bar width\n                });\n\n                $outer.remove();\n            }\n        },\n\n        /**\n         * Focus the first form element in the dialog.\n         */\n        focus: function() {\n            if (this.config.autoFocus) {\n                this.$elem\n                    .find('input, textarea, select')\n                    .first()\n                    .focus();\n            }\n        },\n\n        /**\n         * Override the instance's settings.\n         *\n         * @public\n         *\n         * @param {Object} settings\n         */\n        setting: function(settings) {\n            $.extend(this.config, settings);\n        },\n\n        /**\n         * Custom (functional) animation to scale the dialog from\n         * the target element to the center of the viewport - or\n         * the other way around.\n         *\n         * @returns {Object}\n         */\n        getAnimation: function() {\n            var windowTop = window.pageYOffset,\n                $location = this.config.openFrom,\n                locationOffset = $location.offset();\n\n            var translation = {\n                x : locationOffset.left - ($window.width() / 2) + ($location.width() / 2),\n                y : locationOffset.top - windowTop - ($window.height() / 2) + ($location.height() / 2)\n            };\n\n            return {\n                dialog: {\n                    start: {\n                        'opacity': 0,\n                        'transform': 'translate(' + translation.x + 'px, ' + translation.y + 'px) scale(0.05)',\n                        'transform-origin': 'center'\n                    },\n                    end: {\n                        'opacity': 1,\n                        'transform': 'translate(0,0) scale(1)'\n                    }\n                }\n            }\n        }\n\n    });\n\n    // Plugin\n\n    $.fn[Name] = function(settings, args) {\n        return this.each(function() {\n            var data = $.data(this, Name);\n\n            if ( ! data) {\n                $.data(this, Name, new Dialog(this, settings));\n            } else if (typeof settings === 'string' && data[settings]) {\n                data[settings].apply(data, Array.isArray(args) ? args : [args]);\n            }\n        });\n    };\n\n    $.fn[Name].defaults = Defaults;\n\n\n})(jQuery, window, document);\n"]}