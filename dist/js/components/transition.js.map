{"version":3,"sources":["transition.js"],"names":["$","Transition","element","animation","settings","onEnd","self","this","config","extend","fn","Name","defaults","elem","$elem","parseInt","duration","queue","init","Defaults","delay","curve","onStart","transitionEnd","Fm","prototype","parse","end","animations","hasOwnProperty","console","warn","off","one","e","stopPropagation","setTimeout","bind","fire","requestAnimationFrame","start","slice","direction","is","call","css","style","show","toggleDisplay","opacity","transform","transform-origin","transition","dequeue","hide","hasAttribute","attr","state","prop","prefixed","prefixProp","each","fade","fadeUp","fadeDown","scale","scaleUp","scaleDown","slideUp","slideDown","flipX","flipY","jQuery"],"mappings":";;;;;CAKC,SAAUA,GACP,YAmBA,SAASC,GAAWC,EAASC,EAAWC,EAAUC,GAC9C,GAAIC,GAAOC,IAEXD,GAAKE,OAASR,EAAES,UAAWT,EAAEU,GAAGC,GAAMC,SAAUR,GAChDE,EAAKO,KAASX,EACdI,EAAKQ,MAASd,EAAEE,GAEK,kBAAVG,KACPC,EAAKE,OAAOH,MAAQA,GACpBD,GAAYW,SAASX,GACrBE,EAAKE,OAAOQ,SAAWZ,EACE,kBAAbA,KACZE,EAAKE,OAAOH,MAAQD,GAEvBE,EAAKE,OAAY,MACdF,EAAKQ,MAAMG,MAAM,WACbX,EAAKY,KAAKf,KACVG,EAAKY,KAAKf,GAlCtB,GAAIQ,GAAO,aAEPQ,GACAH,SAAW,IACXI,MAAW,EACXC,MAAW,OACXJ,OAAW,EACXK,QAAW,aACXjB,MAAW,cAKXkB,EAAgBC,GAAGD,eA0BvBvB,GAAES,OAAOR,EAAWwB,WAEhBP,KAAM,SAASf,GACX,GAAIG,GAASC,KACTC,EAASF,EAAKE,MAIlB,IAFAF,EAAKH,UAAYG,EAAKoB,MAAMvB,GAEL,YAAnBG,EAAKH,UACL,MAAOG,GAAKqB,KACT,KAAOnB,EAAOoB,WAAWC,eAAevB,EAAKH,WAChD,MAAO2B,SAAQC,KAAK,wCAGpBR,GACAjB,EAAKQ,MACAkB,IAAIT,GACJU,IAAIV,EAAe,SAASW,GACzBA,EAAEC,kBACF7B,EAAKqB,QAKbS,WAAW9B,EAAKqB,IAAIU,KAAK/B,GAAOE,EAAOQ,SAAWR,EAAOY,MAO7D,IAAIkB,GAAO,WACPC,sBAAsBjC,EAAKkC,MAAMH,KAAK/B,IAG1CE,GAAOY,MAAQkB,IAASF,WAAWE,EAAM9B,EAAOY,QAUpDM,MAAO,SAASvB,GAaZ,MAZ4B,OAAxBA,EAAUsC,OAAO,IACjBlC,KAAKmC,UAAY,SACjBvC,EAAYA,EAAUsC,MAAM,GAAI,IACD,QAAxBtC,EAAUsC,OAAO,IACxBlC,KAAKmC,UAAY,UACjBvC,EAAYA,EAAUsC,MAAM,GAAI,IAEhClC,KAAKmC,UAAYnC,KAAKO,MAAM6B,GAAG,YAC3B,UACA,SAGDxC,GAMXqC,MAAO,WACH,GAAIlC,GAAOC,IAEXD,GAAKE,OAAOc,QAAQsB,KAAKtC,EAAKO,MAE9BP,EAAKQ,MACA+B,IAAIvC,EAAKwC,MAAM,UACfC,OAELR,sBAAsB,WAClBjC,EAAKQ,MAAM+B,IAAIvC,EAAKwC,MAAM,WAOlCnB,IAAK,WACD,GAAIrB,GAAQC,IAEZD,GAAK0C,gBAEL1C,EAAKE,OAAOH,MAAMuC,KAAKtC,EAAKO,MAE5BP,EAAKQ,MAAM+B,KACPI,QAAqB,GACrBC,UAAqB,GACrBC,mBAAqB,GACrBC,WAAqB,KAGrB9C,EAAKE,OAAOS,OACZsB,sBAAsB,WAClBjC,EAAKQ,MAAMuC,aAOvBL,cAAe,WACQ,WAAnBzC,KAAKmC,UACDnC,KAAKO,MAAMiC,OACXxC,KAAKO,MAAMwC,OAEX/C,KAAKM,KAAK0C,aAAa,gBACvBhD,KAAKO,MAAM0C,KAAK,cAAkC,WAAnBjD,KAAKmC,YAS5CI,MAAO,SAASW,GACZ,GAGIZ,GAHAvC,EAAOC,KACPJ,EAAYG,EAAKE,OAAOoB,WAAWtB,EAAKH,WACxCuC,EAAYpC,EAAKoC,SAGP,WAAVe,GACAZ,EAAqB,WAAdH,EACHvC,EAAUqC,MACVrC,EAAUwB,IAEdkB,EAAIO,WAAa,OAEjBP,EAAqB,WAAdH,EACHvC,EAAUwB,IACVxB,EAAUqC,MAEdK,EAAIO,WAAa,OACb9C,EAAKE,OAAOQ,SAAW,MACvBV,EAAKE,OAAOa,MAGpB,KAAK,GAAIqC,KAAQb,GAAK,CAClB,GAAIc,GAAWnC,GAAGoC,WAAWF,EACzBC,KAAaD,IACbb,EAAIc,GAAYd,EAAIa,IAG5B,MAAOb,MAMf7C,EAAEU,GAAGC,GAAQ,SAASR,EAAWC,EAAUC,GACvC,MAAOE,MAAKsD,KAAK,WACb,GAAI5D,GAAWM,KAAMJ,EAAWC,EAAUC,MAIlDL,EAAEU,GAAGC,GAAMC,SAAWO,EACtBnB,EAAEU,GAAGC,GAAMC,SAASgB,YAChBkC,MACItB,OAAUS,QAAW,GACrBtB,KAAUsB,QAAW,IAEzBc,QACIvB,OAAUS,QAAW,EAAGC,UAAa,mBACrCvB,KAAUsB,QAAW,EAAGC,UAAa,kBAEzCc,UACIxB,OAAUS,QAAW,EAAGC,UAAa,oBACrCvB,KAAUsB,QAAW,EAAGC,UAAa,kBAEzCe,OACIzB,OAAUS,QAAW,EAAGC,UAAa,cACrCvB,KAAUsB,QAAW,EAAGC,UAAa,eAEzCgB,SACI1B,OAAUS,QAAW,EAAGC,UAAa,aAAcC,mBAAoB,UACvExB,KAAUsB,QAAW,EAAGC,UAAa,aAAcC,mBAAoB,WAE3EgB,WACI3B,OAAUS,QAAW,EAAGC,UAAa,aAAcC,mBAAoB,OACvExB,KAAUsB,QAAW,EAAGC,UAAa,aAAcC,mBAAoB,QAE3EiB,SACI5B,OAAUS,QAAW,GAAKC,UAAa,eAAgBC,mBAAoB,UAC3ExB,KAAUsB,QAAW,EAAGC,UAAa,YAAaC,mBAAoB,WAE1EkB,WACI7B,OAAUS,QAAW,GAAKC,UAAa,eAAgBC,mBAAoB,OAC3ExB,KAAUsB,QAAW,EAAGC,UAAa,YAAaC,mBAAoB,QAE1EmB,OACI9B,OAAUS,QAAW,EAAGC,UAAa,uCACrCvB,KAAUsB,QAAW,EAAGC,UAAa,sCAEzCqB,OACI/B,OAAUS,QAAW,EAAGC,UAAa,uCACrCvB,KAAUsB,QAAW,EAAGC,UAAa,wCAI9CsB","file":"transition.js","sourcesContent":["/**\n * Transition plugin.\n *\n * @package Fundament\n */\n;(function($) {\n    'use strict';\n\n    var Name = 'transition';\n\n    var Defaults = {\n        duration : 280,\n        delay    : 0,\n        curve    : 'ease',\n        queue    : true,\n        onStart  : function() {},\n        onEnd    : function() {}\n    };\n\n    // Globals\n\n    var transitionEnd = Fm.transitionEnd();\n\n    // Constructor\n\n    function Transition(element, animation, settings, onEnd) {\n        var self = this;\n\n        self.config = $.extend({}, $.fn[Name].defaults, settings);\n        self.elem   = element;\n        self.$elem  = $(element);\n\n        if (typeof onEnd === 'function')\n            self.config.onEnd = onEnd; // onEnd shorthand\n        if (settings == parseInt(settings))\n            self.config.duration = settings; // duration shorthand\n        else if (typeof settings === 'function')\n            self.config.onEnd = settings; // onEnd shorthand\n\n        (self.config.queue) ?\n            self.$elem.queue(function() {\n                self.init(animation);\n            }): self.init(animation);\n    }\n\n    // Prototype\n\n    $.extend(Transition.prototype, {\n\n        init: function(animation) {\n            var self   = this,\n                config = self.config;\n\n            self.animation = self.parse(animation);\n\n            if (self.animation === 'display') {\n                return self.end();\n            } else if ( ! config.animations.hasOwnProperty(self.animation)) {\n                return console.warn('Trying to call an undefined animation');\n            }\n\n            if (transitionEnd) {\n                self.$elem\n                    .off(transitionEnd) // prevent any interruptions\n                    .one(transitionEnd, function(e) {\n                        e.stopPropagation(); // prevent event bubbling\n                        self.end();\n                    });\n            } else {\n                // Set a timer which functions as a fallback for the\n                // unsupported transitionEnd event.\n                setTimeout(self.end.bind(self), config.duration + config.delay);\n            }\n\n\n            // Create a separate queue entry to make sure previous\n            // re-draw events are finished. This also notifies the\n            // browser that the element is soon going to be animated.\n            var fire = function() {\n                requestAnimationFrame(self.start.bind(self));\n            };\n\n            config.delay ? fire() : setTimeout(fire, config.delay);\n        },\n\n        /**\n         * Parses the animation and determines the transition direction.\n         * Returns the base name of the animation.\n         *\n         * @param {string} animation\n         * @return {string}\n         */\n        parse: function(animation) {\n            if (animation.slice(-2) === 'In') {\n                this.direction = 'inward';\n                animation = animation.slice(0, -2);\n            } else if (animation.slice(-3) === 'Out') {\n                this.direction = 'outward';\n                animation = animation.slice(0, -3);\n            } else {\n                this.direction = this.$elem.is(':visible') ? // toggle\n                    'outward':\n                    'inward' ;\n            }\n\n            return animation;\n        },\n\n        /**\n         * Start the transition.\n         */\n        start: function() {\n            var self = this;\n\n            self.config.onStart.call(self.elem);\n\n            self.$elem\n                .css(self.style('start')) // apply start CSS\n                .show(); // ensure visibility\n\n            requestAnimationFrame(function() {\n                self.$elem.css(self.style('end')); // apply end CSS\n            });\n        },\n\n        /**\n         * End the transition.\n         */\n        end: function() {\n            var self  = this;\n\n            self.toggleDisplay();\n\n            self.config.onEnd.call(self.elem);\n\n            self.$elem.css({\n                'opacity'          : '',\n                'transform'        : '',\n                'transform-origin' : '',\n                'transition'       : ''\n            });\n\n            if (self.config.queue)\n                requestAnimationFrame(function() {\n                    self.$elem.dequeue();\n                });\n        },\n\n        /**\n         * Toggle the display.\n         */\n        toggleDisplay: function() {\n            this.direction === 'inward' ?\n                this.$elem.show():\n                this.$elem.hide();\n\n            if (this.elem.hasAttribute('aria-hidden')) {\n                this.$elem.attr('aria-hidden', this.direction !== 'inward');\n            }\n        },\n\n        /**\n         * Get the inline style for the transition.\n         *\n         * @param {string} state\n         */\n        style: function(state) {\n            var self = this,\n                animation = self.config.animations[self.animation],\n                direction = self.direction,\n                css;\n\n            if (state === 'start') {\n                css = (direction === 'inward') ?\n                    animation.start:\n                    animation.end; // reversed\n\n                css.transition = null;\n            } else {\n                css = (direction === 'inward') ?\n                    animation.end:\n                    animation.start; // reversed\n\n                css.transition = 'all ' +\n                    self.config.duration + 'ms ' +\n                    self.config.curve;\n            }\n\n            for (var prop in css) {\n                var prefixed = Fm.prefixProp(prop); // prefix attributes\n                if (prefixed !== prop)\n                    css[prefixed] = css[prop];\n            }\n\n            return css;\n        }\n    });\n\n    // Plugin\n\n    $.fn[Name] = function(animation, settings, onEnd) {\n        return this.each(function() {\n            new Transition(this, animation, settings, onEnd);\n        });\n    };\n\n    $.fn[Name].defaults = Defaults;\n    $.fn[Name].defaults.animations = {\n        fade: {\n            start : { 'opacity': 0 },\n            end   : { 'opacity': 1 }\n        },\n        fadeUp: {\n            start : { 'opacity': 0, 'transform': 'translateY(10%)' },\n            end   : { 'opacity': 1, 'transform': 'translateY(0)' }\n        },\n        fadeDown: {\n            start : { 'opacity': 0, 'transform': 'translateY(-10%)' },\n            end   : { 'opacity': 1, 'transform': 'translateY(0)' }\n        },\n        scale: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)' }\n        },\n        scaleUp: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)', 'transform-origin': 'bottom' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)', 'transform-origin': 'bottom' }\n        },\n        scaleDown: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)', 'transform-origin': 'top' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)', 'transform-origin': 'top' }\n        },\n        slideUp: {\n            start : { 'opacity': 0.2, 'transform': 'scaleY(0.01)', 'transform-origin': 'bottom'},\n            end   : { 'opacity': 1, 'transform': 'scaleY(1)', 'transform-origin': 'bottom'}\n        },\n        slideDown: {\n            start : { 'opacity': 0.2, 'transform': 'scaleY(0.01)', 'transform-origin': 'top'},\n            end   : { 'opacity': 1, 'transform': 'scaleY(1)', 'transform-origin': 'top'}\n        },\n        flipX: {\n            start : { 'opacity': 0, 'transform': 'perspective(2000px) rotateY(-90deg)' },\n            end   : { 'opacity': 1, 'transform': 'perspective(2000px) rotateY(0deg)' }\n        },\n        flipY: {\n            start : { 'opacity': 0, 'transform': 'perspective(2000px) rotateX(-90deg)' },\n            end   : { 'opacity': 1, 'transform': 'perspective(2000px) rotateX(0deg)' }\n        }\n    };\n\n})(jQuery);\n"]}