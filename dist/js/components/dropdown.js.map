{"version":3,"sources":["dropdown.js"],"names":["$","window","Dropdown","element","settings","this","config","extend","fn","Name","defaults","elem","$elem","$menu","find","Selectors","menu","$items","item","init","transform","nodeName","$select","$options","$selected","filter","$dropdown","class","ClassNames","dropdown","select","tabindex","role","aria-hidden","$input","type","name","attr","$label","text","each","$option","classes","is","val","data-value","appendTo","wrap","after","parent","remove","Defaults","smart","searchable","transition","onOpen","onOpening","onClose","onClosing","onSelect","reversed","open","empty","active","input","label","Keys","enter","escape","space","up","down","prototype","setup","bind","addClass","on","onMouseDown","onKeyDown","close","state","self","hasClass","length","apply","e","target","location","href","getAttribute","$target","toggle","which","preventDefault","selectByKey","$active","jQuery","next","prev","first","removeClass","data","call","keyCode","char","String","fromCharCode","toLowerCase","$matches","substr","index","$next","conf","menuHeight","outerHeight","topSpace","offset","top","pageYOffset","bottomSpace","innerHeight","toggleClass","queue","onEnd","setting","args","Array","isArray"],"mappings":"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","file":"dropdown.js","sourcesContent":["/**\n * Dropdown plugin.\n *\n * @package Fundament\n */\n;(function($, window) {\n    'use strict';\n\n    var Name = 'dropdown';\n\n    var Defaults = {\n        smart      : false,\n        searchable : false,\n        transition : 'display',\n        onOpen     : function() {},\n        onOpening  : function() {},\n        onClose    : function() {},\n        onClosing  : function() {},\n        onSelect   : function(item) {}\n    };\n\n    var ClassNames = {\n        dropdown : 'dropdown',\n        select   : 'dropdown--select',\n        reversed : 'dropdown--reversed',\n        menu     : 'menu',\n        item     : 'menu__item',\n        open     : 'is-open',\n        empty    : 'is-empty',\n        active   : 'is-active'\n    };\n\n    var Selectors = {\n        menu   : '.menu',\n        item   : '.menu__item',\n        active : '.is-active',\n        input  : '> input',\n        label  : '> span'\n    };\n\n    var Keys = {\n        enter  : 13,\n        escape : 27,\n        space  : 32,\n        up     : 38,\n        down   : 40\n    };\n\n    // Constructor\n\n    function Dropdown(element, settings) {\n        this.config = $.extend({}, $.fn[Name].defaults, settings);\n        this.elem   = element;\n        this.$elem  = $(element);\n        this.$menu  = this.$elem.find(Selectors.menu);\n        this.$items = this.$elem.find(Selectors.item);\n        this.init();\n    }\n\n    // Prototype\n\n    $.extend(Dropdown.prototype, {\n\n        init: function() {\n            this.setup();\n            this.bind();\n\n            if (this.is('select') && this.is('empty')) {\n                this.$elem.addClass(ClassNames.empty);\n            }\n        },\n\n        /**\n         * Perform needed DOM operations.\n         */\n        setup: function() {\n            this.$elem.attr('tabindex', 0);\n            this.$items.attr('tabindex', -1);\n        },\n\n        /**\n         * Bind event handlers.\n         */\n        bind: function() {\n            this.$elem\n                .on('mousedown', this.onMouseDown.bind(this))\n                .on('keydown', this.onKeyDown.bind(this))\n                .on('blur', this.close.bind(this));\n        },\n\n        /**\n         * Check the state of the dropdown.\n         *\n         * @param {string} state\n         */\n        is: function(state) {\n            var self = this;\n\n            return {\n                open: function() {\n                    return self.$elem.hasClass(ClassNames.open);\n                },\n                select: function() {\n                    return self.$elem.hasClass(ClassNames.select);\n                },\n                empty: function() {\n                    return self.$elem.find(Selectors.input).val().length === 0\n                }\n            }[state].apply();\n        },\n\n        /**\n         * Handle the mousedown event.\n         *\n         * @param {Event} e\n         */\n        onMouseDown: function(e) {\n            if (e.target.nodeName === 'A') {\n                return window.location.href = e.target.getAttribute('href'); // click on link\n            }\n\n            var $target = $(e.target);\n            if ($target.hasClass(ClassNames.item)) {\n                this.select($target); // click on item\n            }\n\n            this.toggle();\n        },\n\n        /**\n         * Handle the keydown event.\n         *\n         * @param {Event} e\n         */\n        onKeyDown: function(e) {\n            switch (e.which) {\n                case Keys.enter:\n                case Keys.space:\n                    this.toggle();\n                    e.preventDefault(); // prevent scroll\n                    break;\n                case Keys.escape:\n                    this.close();\n                    break;\n                case Keys.up:\n                    this.select('prev');\n                    e.preventDefault(); // prevent scroll\n                    break;\n                case Keys.down:\n                    if ( ! this.is('select')) {\n                        this.open();\n                    }\n                    this.select('next');\n                    e.preventDefault(); // prevent scroll\n                    break;\n                default :\n                    this.selectByKey(e.which);\n            }\n        },\n\n        /**\n         * Select a dropdown item.\n         *\n         * @param {jQuery|string} target\n         */\n        select: function(target) {\n            var self = this,\n                $active = self.$items.filter(Selectors.active),\n                $target;\n\n            // Retrieve target item\n            if (target instanceof jQuery) {\n                $target = target; // element is passed\n            } else {\n                if ($active.length) {\n                    $target = (target === 'next') ?\n                        $active.next():\n                        $active.prev();\n                } else {\n                    $target = self.$items.first();\n                }\n            }\n\n            if ( ! $target\n                || $target.length === 0\n                || $target.is($active)\n            ) {\n                return;\n            }\n\n            // TODO: scroll to item (overflowing content)\n\n            // Set classes\n            $active.removeClass(ClassNames.active);\n            $target.addClass(ClassNames.active);\n            self.$elem.removeClass(ClassNames.empty);\n\n            if (self.is('select')) {\n                self.$elem // input value\n                    .find(Selectors.input)\n                    .val($target.data('value'));\n\n                self.$elem // label value\n                    .find(Selectors.label)\n                    .text($target.text());\n            }\n\n            self.config.onSelect.call(self.elem, $target[0]);\n        },\n\n        /**\n         * Select an item by pressing it's first character.\n         *\n         * @param {int} keyCode\n         */\n        selectByKey: function(keyCode) {\n            var self = this,\n                char = String.fromCharCode(keyCode).toLowerCase();\n\n            if ( ! char) {\n                return;\n            }\n\n            var $matches = self.$items.filter(function() {\n                return $(this).text().substr(0,1).toLowerCase() === char\n            });\n\n            if ($matches.length) {\n                var index = $matches.index($matches.filter(Selectors.active)),\n                    $next = $($matches[index + 1]); // next match\n\n                $next && $next.length ?\n                    self.select($next):\n                    self.select($matches.first());\n            }\n        },\n\n        /**\n         * Toggle the dropdown.\n         *\n         * @public\n         */\n        toggle: function() {\n            this.is('open') ?\n                this.close():\n                this.open();\n        },\n\n        /**\n         * Open the dropdown.\n         *\n         * @public\n         */\n        open: function() {\n            var self = this,\n                conf = self.config;\n\n            if (self.is('open')) {\n                return;\n            }\n\n            conf.onOpening.call(self.elem);\n\n            if (conf.smart) {\n                var menuHeight  = self.$menu.outerHeight(),\n                    topSpace    = self.$elem.offset().top - window.pageYOffset,\n                    bottomSpace = window.innerHeight - topSpace - self.$elem.outerHeight();\n\n                // Find the best direction for the menu to open\n                self.$elem.toggleClass(ClassNames.reversed,\n                    bottomSpace < menuHeight && topSpace > menuHeight\n                );\n            }\n\n            self.$menu.transition(conf.transition + 'In', {\n                queue: false,\n                onEnd: conf.onOpen.bind(self.elem)\n            });\n\n            self.$elem.addClass(ClassNames.open);\n        },\n\n        /**\n         * Close the dropdown.\n         *\n         * @public\n         */\n        close: function() {\n            var self = this,\n                conf = self.config;\n\n            if ( ! self.is('open')) {\n                return;\n            }\n\n            conf.onClosing.call(self.elem);\n\n            self.$menu.transition(conf.transition + 'Out', {\n                queue: false,\n                onEnd: conf.onClose.bind(self.elem)\n            });\n\n            self.$elem.removeClass(ClassNames.open);\n        },\n\n        /**\n         * Override the instance's settings.\n         *\n         * @public\n         *\n         * @param {Object} settings\n         */\n        setting: function(settings) {\n            $.extend(this.config, settings);\n        }\n\n    });\n\n    /**\n     * Transform a ordinary <select> into a dropdown.\n     *\n     * @param {HTMLElement} element\n     */\n    function transform(element) {\n        if (element.nodeName !== 'SELECT') {\n            return element;\n        }\n\n        var $select   = $(element),\n            $options  = $select.find('option'),\n            $selected = $options.filter(':selected');\n\n        // Create elements\n        var $dropdown = $('<div/>', {\n                class: ClassNames.dropdown + ' ' + ClassNames.select,\n                tabindex: 0\n            }),\n            $menu = $('<ul/>', {\n                'class': ClassNames.menu,\n                'role': 'listbox',\n                'aria-hidden': true\n            }),\n            $input = $('<input/>', {\n                type: 'hidden',\n                name: $select.attr('name')\n            }),\n            $label = $('<span/>', {\n                text: $selected.text()\n            });\n\n        // Create menu\n        $options.each(function() {\n            var $option = $(this),\n                classes = ClassNames.item + ($option.is($selected) ? ' is-active' : '');\n\n            if ($option.val() === '') {\n                return;\n            }\n\n            $('<li/>', {\n                'text': $option.text(),\n                'class': classes,\n                'role': 'option',\n                'data-value': $option.val()\n            }).appendTo($menu);\n        });\n\n        // Inherit selection\n        $input.val($selected.val());\n\n        // Generate HTML\n        $dropdown = $select\n            .wrap($dropdown)\n            .after($menu, $label, $input)\n            .parent(); // retrieve element\n\n        $select.remove();\n\n        return $dropdown[0];\n    }\n\n    // Plugin\n\n    $.fn[Name] = function(settings, args) {\n        return this.each(function() {\n            var elem = transform(this),\n                data = $.data(this, Name);\n\n            if ( ! data) {\n                $.data(elem, Name, new Dropdown(elem, settings));\n            } else if (typeof settings === 'string' && data[settings]) {\n                data[settings].apply(data, Array.isArray(args) ? args : [args]);\n            }\n        });\n    };\n\n    $.fn[Name].defaults = Defaults;\n\n})(jQuery, window);\n"]}