{"version":3,"sources":["core.js","dialog.js","dropdown.js","popup.js","sticky.js","tab.js","transition.js"],"names":["window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","callback","setTimeout","Fm","document","generateId","Math","random","toString","substr","debounce","func","wait","immediate","timeout","self","this","args","arguments","callNow","later","apply","clearTimeout","prefixProp","attr","undefined","cssDeclaration","i","cssPrefixes","length","prefixed","transitionEnd","events","transition","OTransition","MozTransition","WebkitTransition","event","createElement","style","createID","$","Dialog","element","settings","config","extend","fn","plugin","defaults","elem","$elem","$wrap","class","classNames","wrap","role","$dimmer","dimmer","busy","init","methods","transitionEndEvent","$window","$document","$body","body","prototype","setup","bind","conf","append","parent","hide","openFrom","on","close","find","block","e","stopPropagation","closable","target","toggle","is","open","onOpening","call","scrollBar","show","addClass","focus","onOpen","onClosing","removeClass","one","onClose","direction","animation","duration","onEnd","curve","animations","getAnimation","height","css","overflow","padding-right","$outer","width","visibility","appendTo","$inner","outerWidth","remove","autoFocus","first","setting","windowTop","pageYOffset","$location","locationOffset","offset","translation","x","left","y","top","dialog","start","opacity","transform","transform-origin","end","each","data","indexOf","Array","isArray","console","warn","jQuery","Dropdown","$menu","menu","$items","item","nodeName","$select","$options","$selected","filter","$dropdown","dropdown","select","tabindex","aria-hidden","$input","type","name","$label","text","$option","classes","val","data-value","after","empty","$target","hasClass","which","preventDefault","selectByKey","state","$active","active","next","prev","onSelect","keyCode","char","String","fromCharCode","toLowerCase","$matches","index","$next","smart","menuHeight","outerHeight","topSpace","bottomSpace","innerHeight","toggleClass","reversed","queue","searchable","Popup","namespace","$popup","popup","calc","timer","detach","create","html","trigger","add","hoverable","unbind","off","calculate","position","distance","positioning","onShow","delay","onHide","destroy","Sticky","$context","closest","context","isStick","isBound","recalc","windowHeight","observe","make","contextOffset","contextHeight","elemOffset","elemSize","scrollSpace","setBounds","update","bounds","topOffset","bottom","bottomOffset","overSized","scrollTop","elemBottom","fixed","stick","mask","onStick","unStick","clear","onUnStick","bound","onBound","unBound","onUnBound","action","$mask","insertAfter","observer","MutationObserver","childList","subtree","contextObserver","hasOwnProperty","disconnect","Tab","tabs","link","Transition","parseInt","parse","fire","slice","onStart","toggleDisplay","dequeue","hasAttribute","prop","fade","fadeUp","fadeDown","scale","scaleUp","scaleDown","slideUp","slideDown","flipX","flipY"],"mappings":"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","file":"fundament.min.js","sourcesContent":["/*!\n * Fundament framework v0.3.3\n *\n * https://getfundament.com\n *\n * @license MIT\n * @author Jason Koolman and The Fundament Authors\n */\n\n// Normalization\nwindow.requestAnimationFrame = window.requestAnimationFrame\n    || window.webkitRequestAnimationFrame\n    || window.mozRequestAnimationFrame\n    || window.msRequestAnimationFrame\n    || window.oRequestAnimationFrame\n    || function(callback){ setTimeout(callback, 0) };\n\n/**\n * Fundament core variables and utility functions.\n *\n * @package Fundament\n */\nvar Fm = (function(document) {\n\n    var cssPrefixes = ['-webkit-', '-moz-', '-ms-', '-o-'],\n        cssDeclaration = document.createElement('div').style;\n\n    /**\n     * Generate a fairly random unique identifier.\n     *\n     * @returns {string}\n     */\n    function generateId() {\n        return (Math.random().toString(16) + '000000000').substr(2,8);\n    }\n\n    /**\n     * Debounces a function which will be called after it stops being\n     * called for x milliseconds. If 'immediate' is passed, trigger\n     * the function on the leading edge, instead of the trailing.\n     *\n     * @param {function} func\n     * @param {int} wait\n     * @param {boolean} immediate\n     */\n    function debounce(func, wait, immediate) {\n        var timeout;\n\n        return function() {\n            var self    = this,\n                args    = arguments,\n                callNow = immediate && !timeout;\n\n            var later = function() {\n                timeout = null;\n\n                if ( ! immediate)\n                    func.apply(self, args);\n            };\n\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n\n            if (callNow)\n                func.apply(self, args);\n        };\n    }\n\n    /**\n     * Returns a prefixed CSS property.\n     *\n     * @param {string} attr\n     * @returns {string}\n     */\n    function prefixProp(attr) {\n        if (cssDeclaration[attr] === undefined) {\n            for (var i = 0; i < cssPrefixes.length; i++) {\n                var prefixed = cssPrefixes[i] + attr;\n                if (cssDeclaration[prefixed] !== undefined) {\n                    attr = prefixed;\n                }\n            }\n        }\n\n        return attr;\n    }\n\n    /**\n     * Returns the supported transitionEnd event.\n     *\n     * @returns {string|null}\n     */\n    function transitionEnd() {\n        var events = {\n            transition       : 'transitionend',\n            OTransition      : 'otransitionend',\n            MozTransition    : 'transitionend',\n            WebkitTransition : 'webkitTransitionEnd'\n        };\n\n        for (var event in events) {\n            if (cssDeclaration[event] !== undefined) {\n                return events[event];\n            }\n        }\n\n        return null;\n    }\n\n    return {\n        createID: generateId,\n        debounce: debounce,\n        prefixProp: prefixProp,\n        transitionEnd: transitionEnd\n    };\n\n})(document);\n","/**\n * Dialog plugin.\n *\n * @package Fundament\n */\n;(function($, window, document) {\n    'use strict';\n\n    var plugin  = 'dialog',\n        methods = ['toggle', 'open', 'close', 'setting'];\n\n    var transitionEndEvent = Fm.transitionEnd();\n\n    var $window   = $(window),\n        $document = $(document),\n        $body     = $(document.body);\n\n    // Constructor\n    function Dialog(element, settings) {\n        this.config  = $.extend({}, $.fn[plugin].defaults, settings);\n        this.elem    = element;\n        this.$elem   = $(element);\n        this.$wrap   = $('<div/>', {class: this.config.classNames.wrap, role: 'document'});\n        this.$dimmer = $('<div/>', {class: this.config.classNames.dimmer});\n        this.busy    = false;\n        this.init();\n    }\n\n    // Instance\n    $.extend(Dialog.prototype, {\n\n        init: function () {\n            this.setup();\n            this.bind();\n        },\n\n        /**\n         * Create and retrieve DOM elements.\n         */\n        setup: function() {\n            var conf = this.config;\n\n            if ($('.' + this.config.classNames.dimmer).length === 0) {\n                $body.append(this.$dimmer);\n            }\n\n            this.$dimmer = $('.' + conf.classNames.dimmer);\n            this.$wrap = this.$elem\n                .wrap(this.$wrap) // wrap around dialog\n                .parent() // retrieve element\n                .hide();\n\n            if (conf.openFrom) {\n                conf.openFrom = $(conf.openFrom);\n            }\n        },\n\n        /**\n         * Bind event handlers.\n         */\n        bind: function() {\n            var self = this,\n                conf = self.config;\n\n            self.$elem\n                .on('click', '.' + conf.classNames.close, self.close.bind(self))\n                .find('.' + conf.classNames.block)\n                .on(transitionEndEvent, function(e) {\n                    e.stopPropagation(); // prevent event bubbling\n                });\n\n            if (conf.closable) {\n                self.$wrap.on('click', function(e) {\n                    if (e.target === this) self.close();\n                });\n            }\n        },\n\n        /**\n         * Toggle the dialog.\n         *\n         * @public\n         */\n        toggle: function () {\n            this.$elem.is(':visible') ?\n                this.close():\n                this.open();\n        },\n\n        /**\n         * Open the dialog.\n         *\n         * @public\n         */\n        open: function () {\n            var self = this;\n\n            if (self.busy) {\n                return;\n            }\n\n            self.config.onOpening.call(self.elem);\n            self.busy = true;\n\n            self.scrollBar(false);\n            self.$dimmer.show();\n            self.$wrap.show();\n            self.$dimmer.addClass('is-active');\n\n            self.transition('In', function() { // show\n                self.focus();\n                self.config.onOpen.call(self.elem);\n                self.busy = false;\n            });\n        },\n\n        /**\n         * Close the dialog.\n         *\n         * @public\n         */\n        close: function () {\n            var self = this;\n\n            if (self.busy) {\n                return;\n            }\n\n            self.config.onClosing.call(self.elem);\n            self.busy = true;\n\n            self.transition('Out', function() { // hide\n                self.$wrap.hide();\n                self.$dimmer\n                    .removeClass('is-active')\n                    .one(transitionEndEvent, function() {\n                        self.scrollBar(true);\n                        self.$dimmer.hide();\n                        self.config.onClose.call(self.elem);\n                        self.busy = false;\n                    });\n            });\n        },\n\n        /**\n         * Transition the dialog.\n         *\n         * @param {string} direction\n         * @param {function} callback\n         */\n        transition: function(direction, callback) {\n            var animation = this.config.transition + direction,\n                settings  = {\n                    duration: $.fn.transition.defaults.duration * 1.5,\n                    onEnd: callback\n                };\n\n            if (this.config.openFrom) {\n                animation = 'dialog' + direction;\n                settings.curve = 'cubic-bezier(0.4,0.7,0.6,1)';\n                settings.animations = this.getAnimation();\n            }\n\n            this.$elem.transition(animation, settings);\n        },\n\n        /**\n         * Show or kill the window's scroll bar.\n         *\n         * @param {boolean} show\n         */\n        scrollBar: function(show) {\n            if ($window.height() >= $document.height()) {\n                return; // no scroll bar present\n            }\n\n            if (show) {\n                $body.css({ // show\n                    'overflow': '',\n                    'padding-right': ''\n                });\n            } else {\n                var $outer = $('<div/>').css({\n                        width: 100,\n                        overflow: 'scroll',\n                        visibility: 'hidden'\n                    }).appendTo($body),\n                    $inner = $('<div/>').css({\n                        width: '100%'\n                    }).appendTo($outer);\n\n                $body.css({ // kill\n                    'overflow': 'hidden',\n                    'padding-right': 100 - $inner.outerWidth() // scroll bar width\n                });\n\n                $outer.remove();\n            }\n        },\n\n        /**\n         * Focus the first form element in the dialog.\n         */\n        focus: function() {\n            if (this.config.autoFocus) {\n                this.$elem\n                    .find('input, textarea, select')\n                    .first()\n                    .focus();\n            }\n        },\n\n        /**\n         * Override the instance's settings.\n         *\n         * @public\n         *\n         * @param {Object} settings\n         */\n        setting: function(settings) {\n            $.extend(this.config, settings);\n        },\n\n        /**\n         * Custom (functional) animation to scale the dialog from\n         * the target element to the center of the viewport - or\n         * the other way around.\n         *\n         * @returns {Object}\n         */\n        getAnimation: function() {\n            var windowTop = window.pageYOffset,\n                $location = this.config.openFrom,\n                locationOffset = $location.offset();\n\n            var translation = {\n                x : locationOffset.left - ($window.width() / 2) + ($location.width() / 2),\n                y : locationOffset.top - windowTop - ($window.height() / 2) + ($location.height() / 2)\n            };\n\n            return {\n                dialog: {\n                    start: {\n                        'opacity': 0,\n                        'transform': 'translate(' + translation.x + 'px, ' + translation.y + 'px) scale(0.05)',\n                        'transform-origin': 'center'\n                    },\n                    end: {\n                        'opacity': 1,\n                        'transform': 'translate(0,0) scale(1)'\n                    }\n                }\n            }\n        }\n\n    });\n\n    // Plugin definition\n    $.fn[plugin] = function(settings, args) {\n        return this.each(function() {\n            var data = $.data(this, plugin);\n\n            if ( ! data) {\n                $.data(this, plugin, new Dialog(this, settings));\n            } else if (typeof settings === 'string') {\n                methods.indexOf(settings) > -1 ?\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\n                    console.warn(plugin + ': Trying to call a inaccessible method');\n            }\n        });\n    };\n\n    // Default settings\n    $.fn[plugin].defaults = {\n        openFrom   : null,\n        closable   : true,\n        autoFocus  : true,\n        transition : 'scale',\n        classNames : {\n            dimmer : 'page-dimmer',\n            wrap   : 'dialog-wrap',\n            block  : 'dialog__block',\n            close  : 'dialog__close'\n        },\n        onOpen    : function() {},\n        onOpening : function() {},\n        onClose   : function() {},\n        onClosing : function() {}\n    };\n})(jQuery, window, document);\n","/**\n * Dropdown plugin.\n *\n * @package Fundament\n */\n;(function($, window) {\n    'use strict';\n\n    var plugin    = 'dropdown',\n        methods   = ['toggle', 'open', 'close', 'setting'];\n\n    // Constructor\n    function Dropdown(element, settings) {\n        this.config = $.extend({}, $.fn[plugin].defaults, settings);\n        this.elem   = element;\n        this.$elem  = $(element);\n        this.$menu  = this.$elem.find('.' + this.config.classNames.menu);\n        this.$items = this.$elem.find('.' + this.config.classNames.item);\n        this.init();\n    }\n\n    // Instance\n    $.extend(Dropdown.prototype, {\n\n        init: function() {\n            this.bind();\n\n            if (this.is('select') && this.is('empty')) {\n                this.$elem.addClass(this.config.classNames.empty);\n            }\n        },\n\n        /**\n         * Bind event handlers.\n         */\n        bind: function() {\n            var self = this;\n\n            self.$elem\n                .on('mousedown', function(e) {\n                    var $target = $(e.target);\n                    if ($target.hasClass(self.config.classNames.item)) {\n                        self.select($target); // click on item\n                    }\n                    self.toggle();\n                })\n                .on('focusout', self.close.bind(self))\n                .on('keydown', function(e) {\n                    switch (e.which) {\n                        case 32 : // space key\n                        case 13 : // enter key\n                            self.toggle();\n                            e.preventDefault(); // prevent scroll\n                            break;\n                        case 38 : // arrow up\n                            self.select('prev');\n                            e.preventDefault(); // prevent scroll\n                            break;\n                        case 40 : // arrow down\n                            self.select('next');\n                            e.preventDefault(); // prevent scroll\n                            break;\n                        default :\n                            self.selectByKey(e.which);\n                    }\n                });\n        },\n\n        /**\n         * Check the state of the dropdown.\n         *\n         * @param {string} state\n         */\n        is: function(state) {\n            var self = this;\n\n            return {\n                open: function() {\n                    return self.$elem.hasClass(self.config.classNames.open);\n                },\n                select: function() {\n                    return self.$elem.hasClass(self.config.classNames.select);\n                },\n                empty: function() {\n                    return self.$elem.find('input').val().length === 0\n                }\n            }[state].apply();\n        },\n\n        /**\n         * Select a dropdown item.\n         *\n         * @param {jQuery|string} target\n         */\n        select: function(target) {\n            var self = this,\n                classNames = self.config.classNames,\n                $active = self.$items.filter('.' + classNames.active),\n                $target;\n\n            // Retrieve target item\n            if (target instanceof jQuery) {\n                $target = target; // element is passed\n            } else {\n                if ($active.length) {\n                    $target = (target === 'next') ?\n                        $active.next():\n                        $active.prev();\n                } else {\n                    $target = self.$items.first();\n                }\n            }\n\n            if ( ! $target\n                || $target.length === 0\n                || $target.is($active)) {\n                return false;\n            }\n\n            // TODO: scroll to item (overflowing content)\n\n            // Set classes\n            $active.removeClass(classNames.active);\n            $target.addClass(classNames.active);\n            self.$elem.removeClass(classNames.empty);\n\n            if (self.is('select')) {\n                self.$elem // input value\n                    .find('> input')\n                    .val( $target.data('value') );\n\n                self.$elem // label value\n                    .find('> span')\n                    .text( $target.text() );\n            }\n\n            self.config.onSelect.call(self.elem, $target[0]);\n        },\n\n        /**\n         * Select an item by pressing it's first character.\n         *\n         * @param {int} keyCode\n         */\n        selectByKey: function(keyCode) {\n            var self = this,\n                char = String.fromCharCode(keyCode).toLowerCase();\n\n            if ( ! char) {\n                return;\n            }\n\n            var $matches = self.$items.filter(function() {\n                return $(this).text().substr(0,1).toLowerCase() === char\n            });\n\n            if ($matches.length) {\n                var index = $matches.index($matches.filter('.' + this.config.classNames.active)),\n                    $next = $($matches[index + 1]); // next match\n\n                $next && $next.length ?\n                    self.select($next):\n                    self.select($matches.first());\n            }\n        },\n\n        /**\n         * Toggle the dropdown.\n         */\n        toggle: function() {\n            this.is('open') ?\n                this.close():\n                this.open();\n        },\n\n        /**\n         * Open the dropdown.\n         */\n        open: function() {\n            var self = this,\n                conf = self.config;\n\n            if (self.is('open')) {\n                return;\n            }\n\n            conf.onOpening.call(self.elem);\n\n            if (conf.smart) {\n                var menuHeight  = self.$menu.outerHeight(),\n                    topSpace    = self.$elem.offset().top - window.pageYOffset,\n                    bottomSpace = window.innerHeight - topSpace - self.$elem.outerHeight();\n\n                // Find the best direction for the menu to open\n                self.$elem.toggleClass(conf.classNames.reversed,\n                    bottomSpace < menuHeight && topSpace > menuHeight\n                );\n            }\n\n            self.$menu.transition(conf.transition + 'In', {\n                queue: false,\n                onEnd: conf.onOpen.bind(self.elem)\n            });\n\n            self.$elem.addClass(conf.classNames.open);\n        },\n\n        /**\n         * Close the dropdown.\n         */\n        close: function() {\n            var self = this,\n                conf = self.config;\n\n            if ( ! self.is('open')) {\n                return;\n            }\n\n            conf.onClosing.call(self.elem);\n\n            self.$menu.transition(conf.transition + 'Out', {\n                queue: false,\n                onEnd: conf.onClose.bind(self.elem)\n            });\n\n            self.$elem.removeClass(conf.classNames.open);\n        },\n\n        /**\n         * Override the instance's settings.\n         *\n         * @param {Object} settings\n         */\n        setting: function(settings) {\n            $.extend(this.config, settings);\n        }\n\n    });\n\n    /**\n     * Transform a ordinary <select> into a dropdown.\n     *\n     * @param {HTMLElement} element\n     */\n    function transform(element) {\n        if (element.nodeName !== 'SELECT') {\n            return element;\n        }\n\n        var classNames = $.fn[plugin].defaults.classNames,\n            $select    = $(element),\n            $options   = $select.find('option'),\n            $selected  = $options.filter(':selected');\n\n        // Create elements\n        var $dropdown = $('<div/>', {\n                class: classNames.dropdown + ' ' + classNames.select,\n                tabindex: 0\n            }),\n            $menu = $('<ul/>', {\n                'class': classNames.menu,\n                'role': 'listbox',\n                'aria-hidden': true\n            }),\n            $input = $('<input/>', {\n                type: 'hidden',\n                name: $select.attr('name')\n            }),\n            $label = $('<span/>', {\n                text: $selected.text()\n            });\n\n        // Create menu\n        $options.each(function() {\n            var $option = $(this),\n                classes = classNames.item + ($option.is($selected) ? ' is-active' : '');\n\n            if ($option.val() === '') {\n                return;\n            }\n\n            $('<li/>', {\n                'text': $option.text(),\n                'class': classes,\n                'role': 'option',\n                'data-value': $option.val()\n            }).appendTo($menu);\n        });\n\n        // Inherit selection\n        $input.val($selected.val());\n\n        // Generate HTML\n        $dropdown = $select\n            .wrap($dropdown)\n            .after($menu, $label, $input)\n            .parent(); // retrieve element\n\n        $select.remove();\n\n        return $dropdown[0];\n    }\n\n    // Plugin definition\n    $.fn[plugin] = function(settings, args) {\n        return this.each(function() {\n            var elem = transform(this),\n                data = $.data(this, plugin);\n\n            if ( ! data) {\n                $.data(elem, plugin, new Dropdown(elem, settings));\n            } else if (typeof settings === 'string') {\n                methods.indexOf(settings) > -1 ?\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\n                    console.warn(plugin + ': Trying to call a inaccessible method');\n            }\n        });\n    };\n\n    // Default settings\n    $.fn[plugin].defaults = {\n        smart      : false,\n        searchable : false,\n        transition : 'display',\n        classNames : {\n            dropdown : 'dropdown',\n            select   : 'dropdown--select',\n            reversed : 'dropdown--reversed',\n            open     : 'is-open',\n            empty    : 'is-empty',\n            active   : 'is-active',\n            menu     : 'menu',\n            item     : 'menu__item'\n        },\n        onOpen    : function() {},\n        onOpening : function() {},\n        onClose   : function() {},\n        onClosing : function() {},\n        onSelect  : function(item) {}\n    };\n\n})(jQuery, window);\n","/**\n * Popup plugin.\n *\n * @package Fundament\n */\n;(function($, window, document) {\n    'use strict';\n\n    var plugin    = 'popup',\n        namespace = '.' + plugin,\n        methods   = ['toggle', 'show', 'hide', 'setting', 'destroy'];\n\n    var $window = $(window),\n        $body   = $(document.body);\n\n    // Constructor\n    function Popup(element, settings) {\n        this.namespace = namespace + '.' + Fm.createID();\n        this.config    = $.extend({}, $.fn[plugin].defaults, settings);\n        this.elem      = element;\n        this.$elem     = $(element);\n        this.$popup    = this.$elem.next('.' + this.config.classNames.popup);\n        this.calc      = null;\n        this.timer     = null;\n        this.active    = false;\n        this.init();\n    }\n\n    // Instance\n    $.extend(Popup.prototype, {\n\n        init: function() {\n            var self = this;\n\n            if ( ! self.$popup.length) {\n                self.create();\n            } else {\n                // make sure the popup is a direct child\n                // of the body for absolute positioning\n                self.$popup\n                    .detach()\n                    .appendTo($body);\n            }\n\n            self.bind();\n        },\n\n        /**\n         * Create and append a new popup element.\n         */\n        create: function() {\n            var $popup = $('<div/>', {\n                    class : this.config.classNames.popup,\n                    html  : $('<div/>').html( this.$elem.attr('title') ).text()\n                });\n\n            $popup.appendTo($body);\n\n            this.$elem.attr('title', null);\n\n            this.$popup = $popup;\n        },\n\n        /**\n         * Bind event handlers.\n         */\n        bind: function() {\n            var self = this,\n                namespace = self.namespace;\n\n            switch (self.config.trigger) {\n                case 'click':\n                    self.$elem\n                        .on('click' + namespace, self.toggle.bind(self));\n                    break;\n                case 'hover':\n                    self.$elem\n                        .add(self.config.hoverable ? self.$popup : null)\n                        .on('mouseenter' + namespace, self.show.bind(self))\n                        .on('mouseleave' + namespace, self.hide.bind(self));\n                    break;\n                case 'focus':\n                    self.$elem\n                        .on('focusin' + namespace, self.show.bind(self))\n                        .on('focusout' + namespace, self.hide.bind(self));\n                    break;\n            }\n\n            $window.on('resize' + namespace,\n                Fm.debounce(self.hide.bind(self), 200, true) // hide to force recalculation\n            );\n        },\n\n        /**\n         * Unbind event handlers.\n         */\n        unbind: function() {\n            var self = this,\n                namespace = self.namespace;\n\n            switch (self.config.trigger) {\n                case 'click':\n                    self.$elem\n                        .off('click' + namespace);\n                    break;\n                case 'hover':\n                    self.$elem\n                        .add(self.config.hoverable ? self.$popup : null)\n                        .off('mouseenter' + namespace)\n                        .off('mouseleave' + namespace);\n                    break;\n                case 'focus':\n                    self.$elem\n                        .off('focusin' + namespace)\n                        .off('focusout' + namespace);\n                    break;\n            }\n\n            $window.off('resize' + namespace);\n        },\n\n        /**\n         * Make cached calculations if needed.\n         *\n         * @return {boolean}\n         */\n        calculate: function() {\n            var offset = this.$elem.offset();\n\n            if (\n                this.calc\n                && this.calc.elem.top === offset.top\n                && this.calc.elem.left === offset.left\n            ) {\n                return false; // no need to position\n            }\n\n            this.calc = {\n                elem : {\n                    width  : this.$elem.outerWidth(),\n                    height : this.$elem.outerHeight(),\n                    top    : offset.top,\n                    left   : offset.left\n                },\n                popup : {\n                    width  : this.$popup.outerWidth(),\n                    height : this.$popup.outerHeight()\n                }\n            };\n\n            return true; // popup needs te be positioned\n        },\n\n        /**\n         * (Re)position the popup element.\n         */\n        position: function() {\n            if ( ! this.calculate())\n                return; // nothing changed\n\n            var self        = this,\n                calc        = self.calc,\n                direction   = self.$elem.data('direction') || self.config.direction,\n                distance    = self.config.distance,\n                positioning = {};\n\n            switch (direction) {\n                case 'north':\n                    positioning = {\n                        top  : calc.elem.top - calc.popup.height - distance,\n                        left : calc.elem.left + (calc.elem.width / 2) - (calc.popup.width / 2)\n                    };\n                    break;\n                case 'northeast':\n                    positioning = {\n                        top  : calc.elem.top - calc.popup.height - distance,\n                        left : calc.elem.left + calc.elem.width - calc.popup.width\n                    };\n                    break;\n                case 'east':\n                    positioning = {\n                        top  : calc.elem.top + (calc.elem.height / 2) - (calc.popup.height / 2),\n                        left : calc.elem.left + calc.elem.width + distance\n                    };\n                    break;\n                case 'southeast':\n                    positioning = {\n                        top  : calc.elem.top + calc.elem.height + distance,\n                        left : calc.elem.left + calc.elem.width - calc.popup.width\n                    };\n                    break;\n                case 'south':\n                    positioning = {\n                        top  : calc.elem.top + calc.elem.height + distance,\n                        left : calc.elem.left + (calc.elem.width / 2) - (calc.popup.width / 2)\n                    };\n                    break;\n                case 'southwest':\n                    positioning = {\n                        top  : calc.elem.top + calc.elem.height + distance,\n                        left : calc.elem.left\n                    };\n                    break;\n                case 'west':\n                    positioning = {\n                        top  : calc.elem.top + (calc.elem.height / 2) - (calc.popup.height / 2),\n                        left : calc.elem.left - calc.popup.width - distance\n                    };\n                    break;\n                case 'northwest':\n                    positioning = {\n                        top  : calc.elem.top - calc.popup.height - distance,\n                        left : calc.elem.left\n                    };\n                    break;\n            }\n\n            self.$popup\n                .css(positioning)\n                .addClass(self.config.classNames.popup + '--' + direction);\n        },\n\n        /**\n         * Toggle the popup.\n         */\n        toggle: function() {\n            this.active ?\n                this.hide():\n                this.show();\n        },\n\n        /**\n         * Show the popup.\n         */\n        show: function() {\n            var self = this,\n                conf = self.config;\n\n            clearTimeout(self.timer);\n\n            if ( ! self.active) {\n                self.position();\n                self.timer = setTimeout(function() {\n                    self.active = true;\n                    self.$popup.transition(conf.transition + 'In', {\n                        queue: false,\n                        onEnd: conf.onShow.bind(self.elem)\n                    });\n                }, conf.delay.show || conf.delay);\n            }\n        },\n\n        /**\n         * Hide the popup.\n         */\n        hide: function() {\n            var self = this,\n                conf = self.config;\n\n            clearTimeout(self.timer);\n\n            if (self.active) {\n                self.timer = setTimeout(function() {\n                    self.active = false;\n                    self.$popup.transition(conf.transition + 'Out', {\n                        queue: false,\n                        onEnd: conf.onHide.bind(self.elem)\n                    });\n                }, conf.delay.hide || conf.delay);\n            }\n        },\n\n        /**\n         * Override the instance's settings.\n         *\n         * @param {Object} settings\n         */\n        setting: function(settings) {\n            $.extend(this.config, settings);\n        },\n\n        /**\n         * Destroy the instance.\n         */\n        destroy: function() {\n            this.unbind();\n            this.$popup.remove();\n\n            $.data(this.elem, plugin, null);\n        }\n\n    });\n\n    // Plugin definition\n    $.fn[plugin] = function(settings, args) {\n        return this.each(function() {\n            var data = $.data(this, plugin);\n\n            if ( ! data) {\n                $.data(this, plugin, new Popup(this, settings));\n            } else if (typeof settings === 'string') {\n                methods.indexOf(settings) > -1 ?\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\n                    console.warn(plugin + ': Trying to call a inaccessible method');\n            }\n        });\n    };\n\n    // Default settings\n    $.fn[plugin].defaults = {\n        trigger    : 'hover',\n        transition : 'display',\n        direction  : 'southwest',\n        delay      : 100,\n        distance   : 10,\n        hoverable  : false,\n        classNames : {\n            popup  : 'popup'\n        },\n        onShow : function() {},\n        onHide : function() {}\n    };\n\n})(jQuery, window, document);\n","/**\r\n * Sticky plugin.\r\n *\r\n * @package Fundament\r\n */\r\n;(function($, window, document) {\r\n    'use strict';\r\n\r\n    var plugin    = 'sticky',\r\n        methods   = ['calculate', 'setting', 'destroy'],\r\n        namespace = '.' + plugin;\r\n\r\n    var $window = $(window),\r\n        windowHeight = $window.height();\r\n\r\n    // Constructor\r\n    function Sticky(element, settings) {\r\n        this.namespace = namespace + '.' + Fm.createID();\r\n        this.config    = $.extend({}, $.fn[plugin].defaults, settings);\r\n        this.elem      = element;\r\n        this.$elem     = $(element);\r\n        this.$context  = this.$elem.closest(this.config.context);\r\n        this.calc      = {};\r\n        this.isStick   = false;\r\n        this.isBound   = false;\r\n        this.recalc    = Fm.debounce(this.calculate.bind(this), 200);\r\n\r\n        // initialize as soon as the document and\r\n        // its content have finished loading\r\n        $window.on('load', this.init.bind(this));\r\n    }\r\n\r\n    // Instance\r\n    $.extend(Sticky.prototype, {\r\n\r\n        init: function() {\r\n            if ( ! this.$context.length) {\r\n                return console.warn(plugin + ': Undefined context element');\r\n            }\r\n\r\n            this.bind();\r\n            this.observe();\r\n            this.calculate();\r\n        },\r\n\r\n        /**\r\n         * Pre-calculate sizes and positions.\r\n         *\r\n         * Executed during initialization, while resizing and after mutation (optional).\r\n         */\r\n        calculate: function() {\r\n            var self = this,\r\n                calc = self.calc;\r\n\r\n            windowHeight = $window.height();\r\n\r\n            if (self.isStick) {\r\n                self.make('unStick');\r\n            }\r\n\r\n            calc.contextOffset = self.$context.offset();\r\n            calc.contextHeight = self.$context.outerHeight();\r\n            calc.elemOffset = self.$elem.offset();\r\n            calc.elemSize = {\r\n                width  : self.$elem.outerWidth(),\r\n                height : self.$elem.outerHeight()\r\n            };\r\n\r\n            if (calc.elemSize.height + self.config.scrollSpace >= calc.contextHeight) {\r\n                console.warn(plugin + ': Insufficient scrolling space available');\r\n                return this.destroy();\r\n            }\r\n\r\n            self.setBounds();\r\n\r\n            requestAnimationFrame(self.update.bind(self));\r\n        },\r\n\r\n        /**\r\n         * Set the sticky boundaries.\r\n         */\r\n        setBounds: function() {\r\n            var self = this,\r\n                calc = self.calc,\r\n                conf = self.config;\r\n\r\n            calc.bounds = {\r\n                top    : calc.elemOffset.top - conf.topOffset,\r\n                bottom : calc.contextOffset.top + calc.contextHeight - conf.bottomOffset\r\n            };\r\n\r\n            if (calc.elemSize.height > windowHeight) { // oversized content\r\n                calc.overSized = calc.elemSize.height - windowHeight + conf.bottomOffset;\r\n                calc.bounds.top += calc.overSized + conf.topOffset;\r\n                calc.bounds.bottom += conf.topOffset;\r\n            } else {\r\n                calc.overSized = 0;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Bind event handlers.\r\n         */\r\n        bind: function() {\r\n            var self = this;\r\n\r\n            $window\r\n                .on('resize' + self.namespace, self.recalc)\r\n                .on('scroll' + self.namespace, function() {\r\n                    requestAnimationFrame(self.update.bind(self));\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Unbind event handlers.\r\n         */\r\n        unbind: function() {\r\n            $window\r\n                .off('resize' + this.namespace)\r\n                .off('scroll' + this.namespace);\r\n        },\r\n\r\n        /**\r\n         * Check if the sticky element's state needs to be changed.\r\n         */\r\n        update: function() {\r\n            var self = this,\r\n                calc = self.calc,\r\n                scrollTop = window.pageYOffset,\r\n                elemBottom = scrollTop\r\n                    + self.config.topOffset\r\n                    + calc.elemSize.height\r\n                    - calc.overSized;\r\n\r\n            if (\r\n                ! self.isStick                           // is not sticky\r\n                && scrollTop >= calc.bounds.top          // passed top boundary\r\n            ) {\r\n                self.make('stick');\r\n\r\n                if (elemBottom >= calc.bounds.bottom) {\r\n                    self.make('bound'); // fail-safe\r\n                }\r\n            }\r\n            else if (\r\n                self.isStick                             // is sticky\r\n                && scrollTop < calc.bounds.top           // didn't pass top boundary\r\n            ) {\r\n                self.make('unStick');\r\n            }\r\n            else if (\r\n                ! self.isBound                           // is not bound\r\n                && elemBottom >= calc.bounds.bottom      // passed bottom boundary\r\n            ) {\r\n                self.make('bound');\r\n            }\r\n            else if (\r\n                self.isBound                             // is bound\r\n                && elemBottom < calc.bounds.bottom       // didn't pass bottom boundary\r\n            ) {\r\n                self.make('unBound');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the state of the sticky element.\r\n         *\r\n         * @param {string} state\r\n         */\r\n        make: function(state) {\r\n            var self = this,\r\n                calc = self.calc;\r\n\r\n            return {\r\n                fixed: function() {\r\n                    self.$elem.css({\r\n                        position  : 'fixed',\r\n                        top       : calc.overSized ? -calc.overSized : self.config.topOffset, // oversized content has a negative top\r\n                        bottom    : '',\r\n                        width     : calc.elemSize.width\r\n                    });\r\n                    self.isStick = true;\r\n                },\r\n\r\n                stick: function() {\r\n                    self.make('fixed');\r\n                    self.mask('show');\r\n                    self.$elem.addClass(self.config.classNames.stick);\r\n                    self.config.onStick.call(self.elem);\r\n                },\r\n\r\n                unStick: function() {\r\n                    self.clear();\r\n                    self.mask('hide');\r\n                    self.isBound = false;\r\n                    self.isStick = false;\r\n                    self.config.onUnStick.call(self.elem);\r\n                },\r\n\r\n                bound: function() {\r\n                    self.$elem\r\n                        .css({\r\n                            position : 'absolute',\r\n                            top      : '',\r\n                            bottom   : self.config.bottomOffset\r\n                        })\r\n                        .addClass(self.config.classNames.bound);\r\n                    self.isBound = true;\r\n                    self.config.onBound.call(self.elem);\r\n                },\r\n\r\n                unBound: function() {\r\n                    self.make('fixed');\r\n                    self.$elem.removeClass(self.config.classNames.bound);\r\n                    self.isBound = false;\r\n                    self.config.onUnBound.call(self.elem);\r\n                }\r\n            }[state].apply(self);\r\n        },\r\n\r\n        /**\r\n         * Perform an action for the mask element.\r\n         *\r\n         * @param {string} action\r\n         */\r\n        mask: function(action) {\r\n            var self = this,\r\n                calc = self.calc,\r\n                $mask = this.$elem.next('.' + this.config.classNames.mask);\r\n\r\n            if ( ! self.config.mask) {\r\n                return;\r\n            }\r\n\r\n            return {\r\n                show: function() {\r\n                    if ($mask.length) {\r\n                        $mask.css({ // show existing\r\n                            width  : calc.elemSize.width,\r\n                            height : calc.elemSize.height\r\n                        }).show();\r\n                    } else {\r\n                        $('<div/>', { // create new\r\n                            class : self.config.classNames.mask,\r\n                            css   : {\r\n                                width  : calc.elemSize.width,\r\n                                height : calc.elemSize.height\r\n                            }\r\n                        }).insertAfter(self.$elem);\r\n                    }\r\n                },\r\n\r\n                hide: function() {\r\n                    $mask.hide();\r\n                },\r\n\r\n                remove: function() {\r\n                    $mask.remove();\r\n                }\r\n            }[action].apply(self);\r\n        },\r\n\r\n        /**\r\n         * Clear sticky styles and classes.\r\n         */\r\n        clear: function() {\r\n            this.$elem\r\n                .css({\r\n                    position  : '',\r\n                    top       : '',\r\n                    bottom    : '',\r\n                    width     : ''\r\n                })\r\n                .removeClass(\r\n                    this.config.classNames.stick + ' ' +\r\n                    this.config.classNames.bound\r\n                );\r\n        },\r\n\r\n        /**\r\n         * Observe DOM changes.\r\n         */\r\n        observe: function() {\r\n            if ( ! this.config.observe || ! 'MutationObserver' in window) {\r\n                return;\r\n            }\r\n\r\n            this.observer = new MutationObserver(this.recalc);\r\n            this.observer.observe(this.elem, {\r\n                childList : true,\r\n                subtree   : true\r\n            });\r\n\r\n            this.contextObserver = new MutationObserver(this.recalc);\r\n            this.contextObserver.observe(this.$context[0], {\r\n                childList : true,\r\n                subtree   : true\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Override the instance's settings.\r\n         *\r\n         * @param {Object} settings\r\n         */\r\n        setting: function(settings) {\r\n            $.extend(this.config, settings);\r\n        },\r\n\r\n        /**\r\n         * Destroy the instance.\r\n         */\r\n        destroy: function() {\r\n            if (this.hasOwnProperty('observer')) {\r\n                this.observer.disconnect();\r\n                this.contextObserver.disconnect();\r\n            }\r\n\r\n            this.unbind();\r\n            this.clear();\r\n            this.mask('remove');\r\n\r\n            $.data(this.elem, plugin, null); // unset data\r\n        }\r\n\r\n    });\r\n\r\n    // Plugin definition\r\n    $.fn[plugin] = function(settings, args) {\r\n        return this.each(function() {\r\n            var data = $.data(this, plugin);\r\n\r\n            if ( ! data) {\r\n                $.data(this, plugin, new Sticky(this, settings));\r\n            } else if (typeof settings === 'string') {\r\n                methods.indexOf(settings) > -1 ?\r\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\r\n                    console.warn(plugin + ': Trying to call a inaccessible method');\r\n            }\r\n        });\r\n    };\r\n\r\n    // Default settings\r\n    $.fn[plugin].defaults = {\r\n        context      : null,\r\n        mask         : true,\r\n        observe      : false,\r\n        topOffset    : 0,\r\n        bottomOffset : 0,\r\n        scrollSpace  : 200,\r\n        classNames : {\r\n            stick  : 'stick',\r\n            bound  : 'bound',\r\n            mask   : 'sticky-mask'\r\n        },\r\n        onStick   : function() {},\r\n        onUnStick : function() {},\r\n        onBound   : function() {},\r\n        onUnBound : function() {}\r\n    };\r\n\r\n})(jQuery, window, document);\r\n","/**\r\n * Tab plugin.\r\n *\r\n * @package Fundament\r\n */\r\n;(function($, window) {\r\n    'use strict';\r\n\r\n    var plugin   = 'tab',\r\n        methods  = [];\r\n\r\n    // Constructor\r\n    function Tab(element, settings) {\r\n        this.config = $.extend({}, $.fn[plugin].defaults, settings);\r\n        this.elem   = element;\r\n        this.$elem  = $(element);\r\n        this.init();\r\n    }\r\n\r\n    // Instance\r\n    $.extend(Tab.prototype, {\r\n\r\n        init: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    // Plugin definition\r\n    $.fn[plugin] = function(settings, args) {\r\n        return this.each(function() {\r\n            var data = $.data(this, plugin);\r\n\r\n            if ( ! data) {\r\n                $.data(this, plugin, new Tab(this, settings));\r\n            }\r\n            else if (typeof settings === 'string') {\r\n                methods.indexOf(settings) > -1 ?\r\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\r\n                    console.warn(plugin + ': Trying to call a inaccessible method');\r\n            }\r\n        });\r\n    };\r\n\r\n    // Default settings\r\n    $.fn[plugin].defaults = {\r\n        classNames : {\r\n            tabs   : 'menu--tabs',\r\n            item   : 'menu__item',\r\n            link   : 'menu__link'\r\n        },\r\n        onOpen   : function() {},\r\n        onSelect : function() {},\r\n        onClose  : function() {}\r\n    };\r\n\r\n})(jQuery, window);\r\n","/**\n * Transition plugin.\n *\n * @package Fundament\n */\n;(function($) {\n    'use strict';\n\n    var plugin = 'transition';\n\n    var transitionEndEvent = Fm.transitionEnd();\n\n    // Constructor\n    function Transition(element, animation, settings, onEnd) {\n        var self = this;\n\n        self.config = $.extend({}, $.fn[plugin].defaults, settings);\n        self.elem   = element;\n        self.$elem  = $(element);\n\n        if (typeof onEnd === 'function')\n            self.config.onEnd = onEnd; // onEnd shorthand\n        if (settings == parseInt(settings))\n            self.config.duration = settings; // duration shorthand\n        else if (typeof settings === 'function')\n            self.config.onEnd = settings; // onEnd shorthand\n\n        (self.config.queue) ?\n            self.$elem.queue(function() {\n                self.init(animation);\n            }): self.init(animation);\n    }\n\n    // Instance\n    $.extend(Transition.prototype, {\n\n        init: function(animation) {\n            var self   = this,\n                config = self.config;\n\n            self.animation = self.parse(animation);\n\n            if (self.animation === 'display') {\n                return self.end();\n            } else if ( ! config.animations.hasOwnProperty(self.animation)) {\n                return console.warn('Trying to call an undefined animation');\n            }\n\n            if (transitionEndEvent) {\n                self.$elem\n                    .off(transitionEndEvent) // prevent any interruptions\n                    .one(transitionEndEvent, function(e) {\n                        e.stopPropagation(); // prevent event bubbling\n                        self.end();\n                    });\n            } else {\n                // Set a timer which functions as a fallback for the\n                // unsupported transitionEnd event.\n                setTimeout(self.end.bind(self), config.duration + config.delay);\n            }\n\n\n            // Create a separate queue entry to make sure previous\n            // re-draw events are finished. This also notifies the\n            // browser that the element is soon going to be animated.\n            var fire = function() {\n                requestAnimationFrame(self.start.bind(self));\n            };\n\n            config.delay ? fire() : setTimeout(fire, config.delay);\n        },\n\n        /**\n         * Parses the animation and determines the transition direction.\n         * Returns the base name of the animation.\n         *\n         * @param {string} animation\n         * @return {string}\n         */\n        parse: function(animation) {\n            if (animation.slice(-2) === 'In') {\n                this.direction = 'inward';\n                animation = animation.slice(0, -2);\n            } else if (animation.slice(-3) === 'Out') {\n                this.direction = 'outward';\n                animation = animation.slice(0, -3);\n            } else {\n                this.direction = this.$elem.is(':visible') ? // toggle\n                    'outward':\n                    'inward' ;\n            }\n\n            return animation;\n        },\n\n        /**\n         * Start the transition.\n         */\n        start: function() {\n            var self = this;\n\n            self.config.onStart.call(self.elem);\n\n            self.$elem\n                .css(self.style('start')) // apply start CSS\n                .show(); // ensure visibility\n\n            requestAnimationFrame(function() {\n                self.$elem.css(self.style('end')); // apply end CSS\n            });\n        },\n\n        /**\n         * End the transition.\n         */\n        end: function() {\n            var self  = this;\n\n            self.toggleDisplay();\n\n            self.config.onEnd.call(self.elem);\n\n            self.$elem.css({\n                'opacity'          : '',\n                'transform'        : '',\n                'transform-origin' : '',\n                'transition'       : ''\n            });\n\n            if (self.config.queue)\n                requestAnimationFrame(function() {\n                    self.$elem.dequeue();\n                });\n        },\n\n        /**\n         * Toggle the display.\n         */\n        toggleDisplay: function() {\n            this.direction === 'inward' ?\n                this.$elem.show():\n                this.$elem.hide();\n\n            if (this.elem.hasAttribute('aria-hidden')) {\n                this.$elem.attr('aria-hidden', this.direction !== 'inward');\n            }\n        },\n\n        /**\n         * Get the inline style for the transition.\n         *\n         * @param {string} state\n         */\n        style: function(state) {\n            var self = this,\n                animation = self.config.animations[self.animation],\n                direction = self.direction,\n                css;\n\n            if (state === 'start') {\n                css = (direction === 'inward') ?\n                    animation.start:\n                    animation.end; // reversed\n\n                css.transition = null;\n            } else {\n                css = (direction === 'inward') ?\n                    animation.end:\n                    animation.start; // reversed\n\n                css.transition = 'all ' +\n                    self.config.duration + 'ms ' +\n                    self.config.curve;\n            }\n\n            for (var prop in css) {\n                var prefixed = Fm.prefixProp(prop); // prefix attributes\n                if (prefixed !== prop)\n                    css[prefixed] = css[prop];\n            }\n\n            return css;\n        }\n    });\n\n    // Plugin definition\n    $.fn[plugin] = function(animation, settings, onEnd) {\n        return this.each(function() {\n            new Transition(this, animation, settings, onEnd);\n        });\n    };\n\n    // Default settings\n    $.fn[plugin].defaults = {\n        duration : 280,\n        delay    : 0,\n        curve    : 'ease',\n        queue    : true,\n        onStart  : function() {},\n        onEnd    : function() {}\n    };\n\n    $.fn[plugin].defaults.animations = {\n        // fade\n        fade: {\n            start : { 'opacity': 0 },\n            end   : { 'opacity': 1 }\n        },\n        fadeUp: {\n            start : { 'opacity': 0, 'transform': 'translateY(10%)' },\n            end   : { 'opacity': 1, 'transform': 'translateY(0)' }\n        },\n        fadeDown: {\n            start : { 'opacity': 0, 'transform': 'translateY(-10%)' },\n            end   : { 'opacity': 1, 'transform': 'translateY(0)' }\n        },\n\n        // scale\n        scale: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)' }\n        },\n        scaleUp: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)', 'transform-origin': 'bottom' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)', 'transform-origin': 'bottom' }\n        },\n        scaleDown: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)', 'transform-origin': 'top' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)', 'transform-origin': 'top' }\n        },\n\n        // slide\n        slideUp: {\n            start : { 'opacity': 0.2, 'transform': 'scaleY(0.01)', 'transform-origin': 'bottom'},\n            end   : { 'opacity': 1, 'transform': 'scaleY(1)', 'transform-origin': 'bottom'}\n        },\n        slideDown: {\n            start : { 'opacity': 0.2, 'transform': 'scaleY(0.01)', 'transform-origin': 'top'},\n            end   : { 'opacity': 1, 'transform': 'scaleY(1)', 'transform-origin': 'top'}\n        },\n\n        // flip\n        flipX: {\n            start : { 'opacity': 0, 'transform': 'perspective(2000px) rotateY(-90deg)' },\n            end   : { 'opacity': 1, 'transform': 'perspective(2000px) rotateY(0deg)' }\n        },\n        flipY: {\n            start : { 'opacity': 0, 'transform': 'perspective(2000px) rotateX(-90deg)' },\n            end   : { 'opacity': 1, 'transform': 'perspective(2000px) rotateX(0deg)' }\n        }\n    };\n\n})(jQuery);\n"]}