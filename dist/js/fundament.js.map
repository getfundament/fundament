{"version":3,"sources":["core.js","dialog.js","dropdown.js","popup.js","sticky.js","tab.js","transition.js"],"names":[],"mappingsrltpzfile":"fundament.js","sourcesContent":["/*!\n * Fundament framework v0.3.3\n *\n * https://getfundament.com\n *\n * @license MIT\n * @author Jason Koolman and The Fundament Authors\n */\n\n// Normalization\nwindow.requestAnimationFrame = window.requestAnimationFrame\n    || window.webkitRequestAnimationFrame\n    || window.mozRequestAnimationFrame\n    || window.msRequestAnimationFrame\n    || window.oRequestAnimationFrame\n    || function(callback){ setTimeout(callback, 0) };\n\n/**\n * Fundament core variables and utility functions.\n *\n * @package Fundament\n */\nvar Fm = (function(document) {\n\n    var cssPrefixes = ['-webkit-', '-moz-', '-ms-', '-o-'],\n        cssDeclaration = document.createElement('div').style;\n\n    /**\n     * Generate a fairly random unique identifier.\n     *\n     * @returns {string}\n     */\n    function generateId() {\n        return (Math.random().toString(16) + '000000000').substr(2,8);\n    }\n\n    /**\n     * Debounces a function which will be called after it stops being\n     * called for x milliseconds. If 'immediate' is passed, trigger\n     * the function on the leading edge, instead of the trailing.\n     *\n     * @param {function} func\n     * @param {int} wait\n     * @param {boolean} immediate\n     */\n    function debounce(func, wait, immediate) {\n        var timeout;\n\n        return function() {\n            var self    = this,\n                args    = arguments,\n                callNow = immediate && !timeout;\n\n            var later = function() {\n                timeout = null;\n\n                if ( ! immediate)\n                    func.apply(self, args);\n            };\n\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n\n            if (callNow)\n                func.apply(self, args);\n        };\n    }\n\n    /**\n     * Returns a prefixed CSS property.\n     *\n     * @param {string} attr\n     * @returns {string}\n     */\n    function prefixProp(attr) {\n        if (cssDeclaration[attr] === undefined) {\n            for (var i = 0; i < cssPrefixes.length; i++) {\n                var prefixed = cssPrefixes[i] + attr;\n                if (cssDeclaration[prefixed] !== undefined) {\n                    attr = prefixed;\n                }\n            }\n        }\n\n        return attr;\n    }\n\n    /**\n     * Returns the supported transitionEnd event.\n     *\n     * @returns {string|null}\n     */\n    function transitionEnd() {\n        var events = {\n            transition       : 'transitionend',\n            OTransition      : 'otransitionend',\n            MozTransition    : 'transitionend',\n            WebkitTransition : 'webkitTransitionEnd'\n        };\n\n        for (var event in events) {\n            if (cssDeclaration[event] !== undefined) {\n                return events[event];\n            }\n        }\n\n        return null;\n    }\n\n    return {\n        createID: generateId,\n        debounce: debounce,\n        prefixProp: prefixProp,\n        transitionEnd: transitionEnd\n    };\n\n})(document);\n","/**\n * Dialog plugin.\n *\n * @package Fundament\n */\n;(function($, window, document) {\n    'use strict';\n\n    var plugin  = 'dialog',\n        methods = ['toggle', 'open', 'close', 'setting'];\n\n    var transitionEndEvent = Fm.transitionEnd();\n\n    var $window   = $(window),\n        $document = $(document),\n        $body     = $(document.body);\n\n    // Constructor\n    function Dialog(element, settings) {\n        this.config  = $.extend({}, $.fn[plugin].defaults, settings);\n        this.elem    = element;\n        this.$elem   = $(element);\n        this.$wrap   = $('<div/>', {class: this.config.classNames.wrap, role: 'document'});\n        this.$dimmer = $('<div/>', {class: this.config.classNames.dimmer});\n        this.busy    = false;\n        this.init();\n    }\n\n    // Instance\n    $.extend(Dialog.prototype, {\n\n        init: function () {\n            this.setup();\n            this.bind();\n        },\n\n        /**\n         * Create and retrieve DOM elements.\n         */\n        setup: function() {\n            var conf = this.config;\n\n            if ($('.' + this.config.classNames.dimmer).length === 0) {\n                $body.append(this.$dimmer);\n            }\n\n            this.$dimmer = $('.' + conf.classNames.dimmer);\n            this.$wrap = this.$elem\n                .wrap(this.$wrap) // wrap around dialog\n                .parent() // retrieve element\n                .hide();\n\n            if (conf.openFrom) {\n                conf.openFrom = $(conf.openFrom);\n            }\n        },\n\n        /**\n         * Bind event handlers.\n         */\n        bind: function() {\n            var self = this,\n                conf = self.config;\n\n            self.$elem\n                .on('click', '.' + conf.classNames.close, self.close.bind(self))\n                .find('.' + conf.classNames.block)\n                .on(transitionEndEvent, function(e) {\n                    e.stopPropagation(); // prevent event bubbling\n                });\n\n            if (conf.closable) {\n                self.$wrap.on('click', function(e) {\n                    if (e.target === this) self.close();\n                });\n            }\n        },\n\n        /**\n         * Toggle the dialog.\n         *\n         * @public\n         */\n        toggle: function () {\n            this.$elem.is(':visible') ?\n                this.close():\n                this.open();\n        },\n\n        /**\n         * Open the dialog.\n         *\n         * @public\n         */\n        open: function () {\n            var self = this;\n\n            if (self.busy) {\n                return;\n            }\n\n            self.config.onOpening.call(self.elem);\n            self.busy = true;\n\n            self.scrollBar(false);\n            self.$dimmer.show();\n            self.$wrap.show();\n            self.$dimmer.addClass('is-active');\n\n            self.transition('In', function() { // show\n                self.focus();\n                self.config.onOpen.call(self.elem);\n                self.busy = false;\n            });\n        },\n\n        /**\n         * Close the dialog.\n         *\n         * @public\n         */\n        close: function () {\n            var self = this;\n\n            if (self.busy) {\n                return;\n            }\n\n            self.config.onClosing.call(self.elem);\n            self.busy = true;\n\n            self.transition('Out', function() { // hide\n                self.$wrap.hide();\n                self.$dimmer\n                    .removeClass('is-active')\n                    .one(transitionEndEvent, function() {\n                        self.scrollBar(true);\n                        self.$dimmer.hide();\n                        self.config.onClose.call(self.elem);\n                        self.busy = false;\n                    });\n            });\n        },\n\n        /**\n         * Transition the dialog.\n         *\n         * @param {string} direction\n         * @param {function} callback\n         */\n        transition: function(direction, callback) {\n            var animation = this.config.transition + direction,\n                settings  = {\n                    duration: $.fn.transition.defaults.duration * 1.5,\n                    onEnd: callback\n                };\n\n            if (this.config.openFrom) {\n                animation = 'dialog' + direction;\n                settings.curve = 'cubic-bezier(0.4,0.7,0.6,1)';\n                settings.animations = this.getAnimation();\n            }\n\n            this.$elem.transition(animation, settings);\n        },\n\n        /**\n         * Show or kill the window's scroll bar.\n         *\n         * @param {boolean} show\n         */\n        scrollBar: function(show) {\n            if ($window.height() >= $document.height()) {\n                return; // no scroll bar present\n            }\n\n            if (show) {\n                $body.css({ // show\n                    'overflow': '',\n                    'padding-right': ''\n                });\n            } else {\n                var $outer = $('<div/>').css({\n                        width: 100,\n                        overflow: 'scroll',\n                        visibility: 'hidden'\n                    }).appendTo($body),\n                    $inner = $('<div/>').css({\n                        width: '100%'\n                    }).appendTo($outer);\n\n                $body.css({ // kill\n                    'overflow': 'hidden',\n                    'padding-right': 100 - $inner.outerWidth() // scroll bar width\n                });\n\n                $outer.remove();\n            }\n        },\n\n        /**\n         * Focus the first form element in the dialog.\n         */\n        focus: function() {\n            if (this.config.autoFocus) {\n                this.$elem\n                    .find('input, textarea, select')\n                    .first()\n                    .focus();\n            }\n        },\n\n        /**\n         * Override the instance's settings.\n         *\n         * @public\n         *\n         * @param {Object} settings\n         */\n        setting: function(settings) {\n            $.extend(this.config, settings);\n        },\n\n        /**\n         * Custom (functional) animation to scale the dialog from\n         * the target element to the center of the viewport - or\n         * the other way around.\n         *\n         * @returns {Object}\n         */\n        getAnimation: function() {\n            var windowTop = window.pageYOffset,\n                $location = this.config.openFrom,\n                locationOffset = $location.offset();\n\n            var translation = {\n                x : locationOffset.left - ($window.width() / 2) + ($location.width() / 2),\n                y : locationOffset.top - windowTop - ($window.height() / 2) + ($location.height() / 2)\n            };\n\n            return {\n                dialog: {\n                    start: {\n                        'opacity': 0,\n                        'transform': 'translate(' + translation.x + 'px, ' + translation.y + 'px) scale(0.05)',\n                        'transform-origin': 'center'\n                    },\n                    end: {\n                        'opacity': 1,\n                        'transform': 'translate(0,0) scale(1)'\n                    }\n                }\n            }\n        }\n\n    });\n\n    // Plugin definition\n    $.fn[plugin] = function(settings, args) {\n        return this.each(function() {\n            var data = $.data(this, plugin);\n\n            if ( ! data) {\n                $.data(this, plugin, new Dialog(this, settings));\n            } else if (typeof settings === 'string') {\n                methods.indexOf(settings) > -1 ?\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\n                    console.warn(plugin + ': Trying to call a inaccessible method');\n            }\n        });\n    };\n\n    // Default settings\n    $.fn[plugin].defaults = {\n        openFrom   : null,\n        closable   : true,\n        autoFocus  : true,\n        transition : 'scale',\n        classNames : {\n            dimmer : 'page-dimmer',\n            wrap   : 'dialog-wrap',\n            block  : 'dialog__block',\n            close  : 'dialog__close'\n        },\n        onOpen    : function() {},\n        onOpening : function() {},\n        onClose   : function() {},\n        onClosing : function() {}\n    };\n})(jQuery, window, document);\n","/**\n * Dropdown plugin.\n *\n * @package Fundament\n */\n;(function($, window) {\n    'use strict';\n\n    var plugin    = 'dropdown',\n        methods   = ['toggle', 'open', 'close', 'setting'];\n\n    // Constructor\n    function Dropdown(element, settings) {\n        this.config = $.extend({}, $.fn[plugin].defaults, settings);\n        this.elem   = element;\n        this.$elem  = $(element);\n        this.$menu  = this.$elem.find('.' + this.config.classNames.menu);\n        this.$items = this.$elem.find('.' + this.config.classNames.item);\n        this.init();\n    }\n\n    // Instance\n    $.extend(Dropdown.prototype, {\n\n        init: function() {\n            this.bind();\n\n            if (this.is('select') && this.is('empty')) {\n                this.$elem.addClass(this.config.classNames.empty);\n            }\n        },\n\n        /**\n         * Bind event handlers.\n         */\n        bind: function() {\n            var self = this;\n\n            self.$elem\n                .on('mousedown', function(e) {\n                    var $target = $(e.target);\n                    if ($target.hasClass(self.config.classNames.item)) {\n                        self.select($target); // click on item\n                    }\n                    self.toggle();\n                })\n                .on('focusout', self.close.bind(self))\n                .on('keydown', function(e) {\n                    switch (e.which) {\n                        case 32 : // space key\n                        case 13 : // enter key\n                            self.toggle();\n                            e.preventDefault(); // prevent scroll\n                            break;\n                        case 38 : // arrow up\n                            self.select('prev');\n                            e.preventDefault(); // prevent scroll\n                            break;\n                        case 40 : // arrow down\n                            self.select('next');\n                            e.preventDefault(); // prevent scroll\n                            break;\n                        default :\n                            self.selectByKey(e.which);\n                    }\n                });\n        },\n\n        /**\n         * Check the state of the dropdown.\n         *\n         * @param {string} state\n         */\n        is: function(state) {\n            var self = this;\n\n            return {\n                open: function() {\n                    return self.$elem.hasClass(self.config.classNames.open);\n                },\n                select: function() {\n                    return self.$elem.hasClass(self.config.classNames.select);\n                },\n                empty: function() {\n                    return self.$elem.find('input').val().length === 0\n                }\n            }[state].apply();\n        },\n\n        /**\n         * Select a dropdown item.\n         *\n         * @param {jQuery|string} target\n         */\n        select: function(target) {\n            var self = this,\n                classNames = self.config.classNames,\n                $active = self.$items.filter('.' + classNames.active),\n                $target;\n\n            // Retrieve target item\n            if (target instanceof jQuery) {\n                $target = target; // element is passed\n            } else {\n                if ($active.length) {\n                    $target = (target === 'next') ?\n                        $active.next():\n                        $active.prev();\n                } else {\n                    $target = self.$items.first();\n                }\n            }\n\n            if ( ! $target\n                || $target.length === 0\n                || $target.is($active)) {\n                return false;\n            }\n\n            // TODO: scroll to item (overflowing content)\n\n            // Set classes\n            $active.removeClass(classNames.active);\n            $target.addClass(classNames.active);\n            self.$elem.removeClass(classNames.empty);\n\n            if (self.is('select')) {\n                self.$elem // input value\n                    .find('> input')\n                    .val( $target.data('value') );\n\n                self.$elem // label value\n                    .find('> span')\n                    .text( $target.text() );\n            }\n\n            self.config.onSelect.call(self.elem, $target[0]);\n        },\n\n        /**\n         * Select an item by pressing it's first character.\n         *\n         * @param {int} keyCode\n         */\n        selectByKey: function(keyCode) {\n            var self = this,\n                char = String.fromCharCode(keyCode).toLowerCase();\n\n            if ( ! char) {\n                return;\n            }\n\n            var $matches = self.$items.filter(function() {\n                return $(this).text().substr(0,1).toLowerCase() === char\n            });\n\n            if ($matches.length) {\n                var index = $matches.index($matches.filter('.' + this.config.classNames.active)),\n                    $next = $($matches[index + 1]); // next match\n\n                $next && $next.length ?\n                    self.select($next):\n                    self.select($matches.first());\n            }\n        },\n\n        /**\n         * Toggle the dropdown.\n         */\n        toggle: function() {\n            this.is('open') ?\n                this.close():\n                this.open();\n        },\n\n        /**\n         * Open the dropdown.\n         */\n        open: function() {\n            var self = this,\n                conf = self.config;\n\n            if (self.is('open')) {\n                return;\n            }\n\n            conf.onOpening.call(self.elem);\n\n            if (conf.smart) {\n                var menuHeight  = self.$menu.outerHeight(),\n                    topSpace    = self.$elem.offset().top - window.pageYOffset,\n                    bottomSpace = window.innerHeight - topSpace - self.$elem.outerHeight();\n\n                // Find the best direction for the menu to open\n                self.$elem.toggleClass(conf.classNames.reversed,\n                    bottomSpace < menuHeight && topSpace > menuHeight\n                );\n            }\n\n            self.$menu.transition(conf.transition + 'In', {\n                queue: false,\n                onEnd: conf.onOpen.bind(self.elem)\n            });\n\n            self.$elem.addClass(conf.classNames.open);\n        },\n\n        /**\n         * Close the dropdown.\n         */\n        close: function() {\n            var self = this,\n                conf = self.config;\n\n            if ( ! self.is('open')) {\n                return;\n            }\n\n            conf.onClosing.call(self.elem);\n\n            self.$menu.transition(conf.transition + 'Out', {\n                queue: false,\n                onEnd: conf.onClose.bind(self.elem)\n            });\n\n            self.$elem.removeClass(conf.classNames.open);\n        },\n\n        /**\n         * Override the instance's settings.\n         *\n         * @param {Object} settings\n         */\n        setting: function(settings) {\n            $.extend(this.config, settings);\n        }\n\n    });\n\n    /**\n     * Transform a ordinary <select> into a dropdown.\n     *\n     * @param {HTMLElement} element\n     */\n    function transform(element) {\n        if (element.nodeName !== 'SELECT') {\n            return element;\n        }\n\n        var classNames = $.fn[plugin].defaults.classNames,\n            $select    = $(element),\n            $options   = $select.find('option'),\n            $selected  = $options.filter(':selected');\n\n        // Create elements\n        var $dropdown = $('<div/>', {\n                class: classNames.dropdown + ' ' + classNames.select,\n                tabindex: 0\n            }),\n            $menu = $('<ul/>', {\n                'class': classNames.menu,\n                'role': 'listbox',\n                'aria-hidden': true\n            }),\n            $input = $('<input/>', {\n                type: 'hidden',\n                name: $select.attr('name')\n            }),\n            $label = $('<span/>', {\n                text: $selected.text()\n            });\n\n        // Create menu\n        $options.each(function() {\n            var $option = $(this),\n                classes = classNames.item + ($option.is($selected) ? ' is-active' : '');\n\n            if ($option.val() === '') {\n                return;\n            }\n\n            $('<li/>', {\n                'text': $option.text(),\n                'class': classes,\n                'role': 'option',\n                'data-value': $option.val()\n            }).appendTo($menu);\n        });\n\n        // Inherit selection\n        $input.val($selected.val());\n\n        // Generate HTML\n        $dropdown = $select\n            .wrap($dropdown)\n            .after($menu, $label, $input)\n            .parent(); // retrieve element\n\n        $select.remove();\n\n        return $dropdown[0];\n    }\n\n    // Plugin definition\n    $.fn[plugin] = function(settings, args) {\n        return this.each(function() {\n            var elem = transform(this),\n                data = $.data(this, plugin);\n\n            if ( ! data) {\n                $.data(elem, plugin, new Dropdown(elem, settings));\n            } else if (typeof settings === 'string') {\n                methods.indexOf(settings) > -1 ?\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\n                    console.warn(plugin + ': Trying to call a inaccessible method');\n            }\n        });\n    };\n\n    // Default settings\n    $.fn[plugin].defaults = {\n        smart      : false,\n        searchable : false,\n        transition : 'display',\n        classNames : {\n            dropdown : 'dropdown',\n            select   : 'dropdown--select',\n            reversed : 'dropdown--reversed',\n            open     : 'is-open',\n            empty    : 'is-empty',\n            active   : 'is-active',\n            menu     : 'menu',\n            item     : 'menu__item'\n        },\n        onOpen    : function() {},\n        onOpening : function() {},\n        onClose   : function() {},\n        onClosing : function() {},\n        onSelect  : function(item) {}\n    };\n\n})(jQuery, window);\n","/**\n * Popup plugin.\n *\n * @package Fundament\n */\n;(function($, window, document) {\n    'use strict';\n\n    var plugin    = 'popup',\n        namespace = '.' + plugin,\n        methods   = ['toggle', 'show', 'hide', 'setting', 'destroy'];\n\n    var $window = $(window),\n        $body   = $(document.body);\n\n    // Constructor\n    function Popup(element, settings) {\n        this.namespace = namespace + '.' + Fm.createID();\n        this.config    = $.extend({}, $.fn[plugin].defaults, settings);\n        this.elem      = element;\n        this.$elem     = $(element);\n        this.$popup    = this.$elem.next('.' + this.config.classNames.popup);\n        this.calc      = null;\n        this.timer     = null;\n        this.active    = false;\n        this.init();\n    }\n\n    // Instance\n    $.extend(Popup.prototype, {\n\n        init: function() {\n            var self = this;\n\n            if ( ! self.$popup.length) {\n                self.create();\n            } else {\n                // make sure the popup is a direct child\n                // of the body for absolute positioning\n                self.$popup\n                    .detach()\n                    .appendTo($body);\n            }\n\n            self.bind();\n        },\n\n        /**\n         * Create and append a new popup element.\n         */\n        create: function() {\n            var $popup = $('<div/>', {\n                    class : this.config.classNames.popup,\n                    html  : $('<div/>').html( this.$elem.attr('title') ).text()\n                });\n\n            $popup.appendTo($body);\n\n            this.$elem.attr('title', null);\n\n            this.$popup = $popup;\n        },\n\n        /**\n         * Bind event handlers.\n         */\n        bind: function() {\n            var self = this,\n                namespace = self.namespace;\n\n            switch (self.config.trigger) {\n                case 'click':\n                    self.$elem\n                        .on('click' + namespace, self.toggle.bind(self));\n                    break;\n                case 'hover':\n                    self.$elem\n                        .add(self.config.hoverable ? self.$popup : null)\n                        .on('mouseenter' + namespace, self.show.bind(self))\n                        .on('mouseleave' + namespace, self.hide.bind(self));\n                    break;\n                case 'focus':\n                    self.$elem\n                        .on('focusin' + namespace, self.show.bind(self))\n                        .on('focusout' + namespace, self.hide.bind(self));\n                    break;\n            }\n\n            $window.on('resize' + namespace,\n                Fm.debounce(self.hide.bind(self), 200, true) // hide to force recalculation\n            );\n        },\n\n        /**\n         * Unbind event handlers.\n         */\n        unbind: function() {\n            var self = this,\n                namespace = self.namespace;\n\n            switch (self.config.trigger) {\n                case 'click':\n                    self.$elem\n                        .off('click' + namespace);\n                    break;\n                case 'hover':\n                    self.$elem\n                        .add(self.config.hoverable ? self.$popup : null)\n                        .off('mouseenter' + namespace)\n                        .off('mouseleave' + namespace);\n                    break;\n                case 'focus':\n                    self.$elem\n                        .off('focusin' + namespace)\n                        .off('focusout' + namespace);\n                    break;\n            }\n\n            $window.off('resize' + namespace);\n        },\n\n        /**\n         * Make cached calculations if needed.\n         *\n         * @return {boolean}\n         */\n        calculate: function() {\n            var offset = this.$elem.offset();\n\n            if (\n                this.calc\n                && this.calc.elem.top === offset.top\n                && this.calc.elem.left === offset.left\n            ) {\n                return false; // no need to position\n            }\n\n            this.calc = {\n                elem : {\n                    width  : this.$elem.outerWidth(),\n                    height : this.$elem.outerHeight(),\n                    top    : offset.top,\n                    left   : offset.left\n                },\n                popup : {\n                    width  : this.$popup.outerWidth(),\n                    height : this.$popup.outerHeight()\n                }\n            };\n\n            return true; // popup needs te be positioned\n        },\n\n        /**\n         * (Re)position the popup element.\n         */\n        position: function() {\n            if ( ! this.calculate())\n                return; // nothing changed\n\n            var self        = this,\n                calc        = self.calc,\n                direction   = self.$elem.data('direction') || self.config.direction,\n                distance    = self.config.distance,\n                positioning = {};\n\n            switch (direction) {\n                case 'north':\n                    positioning = {\n                        top  : calc.elem.top - calc.popup.height - distance,\n                        left : calc.elem.left + (calc.elem.width / 2) - (calc.popup.width / 2)\n                    };\n                    break;\n                case 'northeast':\n                    positioning = {\n                        top  : calc.elem.top - calc.popup.height - distance,\n                        left : calc.elem.left + calc.elem.width - calc.popup.width\n                    };\n                    break;\n                case 'east':\n                    positioning = {\n                        top  : calc.elem.top + (calc.elem.height / 2) - (calc.popup.height / 2),\n                        left : calc.elem.left + calc.elem.width + distance\n                    };\n                    break;\n                case 'southeast':\n                    positioning = {\n                        top  : calc.elem.top + calc.elem.height + distance,\n                        left : calc.elem.left + calc.elem.width - calc.popup.width\n                    };\n                    break;\n                case 'south':\n                    positioning = {\n                        top  : calc.elem.top + calc.elem.height + distance,\n                        left : calc.elem.left + (calc.elem.width / 2) - (calc.popup.width / 2)\n                    };\n                    break;\n                case 'southwest':\n                    positioning = {\n                        top  : calc.elem.top + calc.elem.height + distance,\n                        left : calc.elem.left\n                    };\n                    break;\n                case 'west':\n                    positioning = {\n                        top  : calc.elem.top + (calc.elem.height / 2) - (calc.popup.height / 2),\n                        left : calc.elem.left - calc.popup.width - distance\n                    };\n                    break;\n                case 'northwest':\n                    positioning = {\n                        top  : calc.elem.top - calc.popup.height - distance,\n                        left : calc.elem.left\n                    };\n                    break;\n            }\n\n            self.$popup\n                .css(positioning)\n                .addClass(self.config.classNames.popup + '--' + direction);\n        },\n\n        /**\n         * Toggle the popup.\n         */\n        toggle: function() {\n            this.active ?\n                this.hide():\n                this.show();\n        },\n\n        /**\n         * Show the popup.\n         */\n        show: function() {\n            var self = this,\n                conf = self.config;\n\n            clearTimeout(self.timer);\n\n            if ( ! self.active) {\n                self.position();\n                self.timer = setTimeout(function() {\n                    self.active = true;\n                    self.$popup.transition(conf.transition + 'In', {\n                        queue: false,\n                        onEnd: conf.onShow.bind(self.elem)\n                    });\n                }, conf.delay.show || conf.delay);\n            }\n        },\n\n        /**\n         * Hide the popup.\n         */\n        hide: function() {\n            var self = this,\n                conf = self.config;\n\n            clearTimeout(self.timer);\n\n            if (self.active) {\n                self.timer = setTimeout(function() {\n                    self.active = false;\n                    self.$popup.transition(conf.transition + 'Out', {\n                        queue: false,\n                        onEnd: conf.onHide.bind(self.elem)\n                    });\n                }, conf.delay.hide || conf.delay);\n            }\n        },\n\n        /**\n         * Override the instance's settings.\n         *\n         * @param {Object} settings\n         */\n        setting: function(settings) {\n            $.extend(this.config, settings);\n        },\n\n        /**\n         * Destroy the instance.\n         */\n        destroy: function() {\n            this.unbind();\n            this.$popup.remove();\n\n            $.data(this.elem, plugin, null);\n        }\n\n    });\n\n    // Plugin definition\n    $.fn[plugin] = function(settings, args) {\n        return this.each(function() {\n            var data = $.data(this, plugin);\n\n            if ( ! data) {\n                $.data(this, plugin, new Popup(this, settings));\n            } else if (typeof settings === 'string') {\n                methods.indexOf(settings) > -1 ?\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\n                    console.warn(plugin + ': Trying to call a inaccessible method');\n            }\n        });\n    };\n\n    // Default settings\n    $.fn[plugin].defaults = {\n        trigger    : 'hover',\n        transition : 'display',\n        direction  : 'southwest',\n        delay      : 100,\n        distance   : 10,\n        hoverable  : false,\n        classNames : {\n            popup  : 'popup'\n        },\n        onShow : function() {},\n        onHide : function() {}\n    };\n\n})(jQuery, window, document);\n","/**\r\n * Sticky plugin.\r\n *\r\n * @package Fundament\r\n */\r\n;(function($, window, document) {\r\n    'use strict';\r\n\r\n    var plugin    = 'sticky',\r\n        methods   = ['calculate', 'setting', 'destroy'],\r\n        namespace = '.' + plugin;\r\n\r\n    var $window = $(window),\r\n        windowHeight = $window.height();\r\n\r\n    // Constructor\r\n    function Sticky(element, settings) {\r\n        this.namespace = namespace + '.' + Fm.createID();\r\n        this.config    = $.extend({}, $.fn[plugin].defaults, settings);\r\n        this.elem      = element;\r\n        this.$elem     = $(element);\r\n        this.$context  = this.$elem.closest(this.config.context);\r\n        this.calc      = {};\r\n        this.isStick   = false;\r\n        this.isBound   = false;\r\n        this.recalc    = Fm.debounce(this.calculate.bind(this), 200);\r\n\r\n        // initialize as soon as the document and\r\n        // its content have finished loading\r\n        $window.on('load', this.init.bind(this));\r\n    }\r\n\r\n    // Instance\r\n    $.extend(Sticky.prototype, {\r\n\r\n        init: function() {\r\n            if ( ! this.$context.length) {\r\n                return console.warn(plugin + ': Undefined context element');\r\n            }\r\n\r\n            this.bind();\r\n            this.observe();\r\n            this.calculate();\r\n        },\r\n\r\n        /**\r\n         * Pre-calculate sizes and positions.\r\n         *\r\n         * Executed during initialization, while resizing and after mutation (optional).\r\n         */\r\n        calculate: function() {\r\n            var self = this,\r\n                calc = self.calc;\r\n\r\n            windowHeight = $window.height();\r\n\r\n            if (self.isStick) {\r\n                self.make('unStick');\r\n            }\r\n\r\n            calc.contextOffset = self.$context.offset();\r\n            calc.contextHeight = self.$context.outerHeight();\r\n            calc.elemOffset = self.$elem.offset();\r\n            calc.elemSize = {\r\n                width  : self.$elem.outerWidth(),\r\n                height : self.$elem.outerHeight()\r\n            };\r\n\r\n            if (calc.elemSize.height + self.config.scrollSpace >= calc.contextHeight) {\r\n                console.warn(plugin + ': Insufficient scrolling space available');\r\n                return this.destroy();\r\n            }\r\n\r\n            self.setBounds();\r\n\r\n            requestAnimationFrame(self.update.bind(self));\r\n        },\r\n\r\n        /**\r\n         * Set the sticky boundaries.\r\n         */\r\n        setBounds: function() {\r\n            var self = this,\r\n                calc = self.calc,\r\n                conf = self.config;\r\n\r\n            calc.bounds = {\r\n                top    : calc.elemOffset.top - conf.topOffset,\r\n                bottom : calc.contextOffset.top + calc.contextHeight - conf.bottomOffset\r\n            };\r\n\r\n            if (calc.elemSize.height > windowHeight) { // oversized content\r\n                calc.overSized = calc.elemSize.height - windowHeight + conf.bottomOffset;\r\n                calc.bounds.top += calc.overSized + conf.topOffset;\r\n                calc.bounds.bottom += conf.topOffset;\r\n            } else {\r\n                calc.overSized = 0;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Bind event handlers.\r\n         */\r\n        bind: function() {\r\n            var self = this;\r\n\r\n            $window\r\n                .on('resize' + self.namespace, self.recalc)\r\n                .on('scroll' + self.namespace, function() {\r\n                    requestAnimationFrame(self.update.bind(self));\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Unbind event handlers.\r\n         */\r\n        unbind: function() {\r\n            $window\r\n                .off('resize' + this.namespace)\r\n                .off('scroll' + this.namespace);\r\n        },\r\n\r\n        /**\r\n         * Check if the sticky element's state needs to be changed.\r\n         */\r\n        update: function() {\r\n            var self = this,\r\n                calc = self.calc,\r\n                scrollTop = window.pageYOffset,\r\n                elemBottom = scrollTop\r\n                    + self.config.topOffset\r\n                    + calc.elemSize.height\r\n                    - calc.overSized;\r\n\r\n            if (\r\n                ! self.isStick                           // is not sticky\r\n                && scrollTop >= calc.bounds.top          // passed top boundary\r\n            ) {\r\n                self.make('stick');\r\n\r\n                if (elemBottom >= calc.bounds.bottom) {\r\n                    self.make('bound'); // fail-safe\r\n                }\r\n            }\r\n            else if (\r\n                self.isStick                             // is sticky\r\n                && scrollTop < calc.bounds.top           // didn't pass top boundary\r\n            ) {\r\n                self.make('unStick');\r\n            }\r\n            else if (\r\n                ! self.isBound                           // is not bound\r\n                && elemBottom >= calc.bounds.bottom      // passed bottom boundary\r\n            ) {\r\n                self.make('bound');\r\n            }\r\n            else if (\r\n                self.isBound                             // is bound\r\n                && elemBottom < calc.bounds.bottom       // didn't pass bottom boundary\r\n            ) {\r\n                self.make('unBound');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the state of the sticky element.\r\n         *\r\n         * @param {string} state\r\n         */\r\n        make: function(state) {\r\n            var self = this,\r\n                calc = self.calc;\r\n\r\n            return {\r\n                fixed: function() {\r\n                    self.$elem.css({\r\n                        position  : 'fixed',\r\n                        top       : calc.overSized ? -calc.overSized : self.config.topOffset, // oversized content has a negative top\r\n                        bottom    : '',\r\n                        width     : calc.elemSize.width\r\n                    });\r\n                    self.isStick = true;\r\n                },\r\n\r\n                stick: function() {\r\n                    self.make('fixed');\r\n                    self.mask('show');\r\n                    self.$elem.addClass(self.config.classNames.stick);\r\n                    self.config.onStick.call(self.elem);\r\n                },\r\n\r\n                unStick: function() {\r\n                    self.clear();\r\n                    self.mask('hide');\r\n                    self.isBound = false;\r\n                    self.isStick = false;\r\n                    self.config.onUnStick.call(self.elem);\r\n                },\r\n\r\n                bound: function() {\r\n                    self.$elem\r\n                        .css({\r\n                            position : 'absolute',\r\n                            top      : '',\r\n                            bottom   : self.config.bottomOffset\r\n                        })\r\n                        .addClass(self.config.classNames.bound);\r\n                    self.isBound = true;\r\n                    self.config.onBound.call(self.elem);\r\n                },\r\n\r\n                unBound: function() {\r\n                    self.make('fixed');\r\n                    self.$elem.removeClass(self.config.classNames.bound);\r\n                    self.isBound = false;\r\n                    self.config.onUnBound.call(self.elem);\r\n                }\r\n            }[state].apply(self);\r\n        },\r\n\r\n        /**\r\n         * Perform an action for the mask element.\r\n         *\r\n         * @param {string} action\r\n         */\r\n        mask: function(action) {\r\n            var self = this,\r\n                calc = self.calc,\r\n                $mask = this.$elem.next('.' + this.config.classNames.mask);\r\n\r\n            if ( ! self.config.mask) {\r\n                return;\r\n            }\r\n\r\n            return {\r\n                show: function() {\r\n                    if ($mask.length) {\r\n                        $mask.css({ // show existing\r\n                            width  : calc.elemSize.width,\r\n                            height : calc.elemSize.height\r\n                        }).show();\r\n                    } else {\r\n                        $('<div/>', { // create new\r\n                            class : self.config.classNames.mask,\r\n                            css   : {\r\n                                width  : calc.elemSize.width,\r\n                                height : calc.elemSize.height\r\n                            }\r\n                        }).insertAfter(self.$elem);\r\n                    }\r\n                },\r\n\r\n                hide: function() {\r\n                    $mask.hide();\r\n                },\r\n\r\n                remove: function() {\r\n                    $mask.remove();\r\n                }\r\n            }[action].apply(self);\r\n        },\r\n\r\n        /**\r\n         * Clear sticky styles and classes.\r\n         */\r\n        clear: function() {\r\n            this.$elem\r\n                .css({\r\n                    position  : '',\r\n                    top       : '',\r\n                    bottom    : '',\r\n                    width     : ''\r\n                })\r\n                .removeClass(\r\n                    this.config.classNames.stick + ' ' +\r\n                    this.config.classNames.bound\r\n                );\r\n        },\r\n\r\n        /**\r\n         * Observe DOM changes.\r\n         */\r\n        observe: function() {\r\n            if ( ! this.config.observe || ! 'MutationObserver' in window) {\r\n                return;\r\n            }\r\n\r\n            this.observer = new MutationObserver(this.recalc);\r\n            this.observer.observe(this.elem, {\r\n                childList : true,\r\n                subtree   : true\r\n            });\r\n\r\n            this.contextObserver = new MutationObserver(this.recalc);\r\n            this.contextObserver.observe(this.$context[0], {\r\n                childList : true,\r\n                subtree   : true\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Override the instance's settings.\r\n         *\r\n         * @param {Object} settings\r\n         */\r\n        setting: function(settings) {\r\n            $.extend(this.config, settings);\r\n        },\r\n\r\n        /**\r\n         * Destroy the instance.\r\n         */\r\n        destroy: function() {\r\n            if (this.hasOwnProperty('observer')) {\r\n                this.observer.disconnect();\r\n                this.contextObserver.disconnect();\r\n            }\r\n\r\n            this.unbind();\r\n            this.clear();\r\n            this.mask('remove');\r\n\r\n            $.data(this.elem, plugin, null); // unset data\r\n        }\r\n\r\n    });\r\n\r\n    // Plugin definition\r\n    $.fn[plugin] = function(settings, args) {\r\n        return this.each(function() {\r\n            var data = $.data(this, plugin);\r\n\r\n            if ( ! data) {\r\n                $.data(this, plugin, new Sticky(this, settings));\r\n            } else if (typeof settings === 'string') {\r\n                methods.indexOf(settings) > -1 ?\r\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\r\n                    console.warn(plugin + ': Trying to call a inaccessible method');\r\n            }\r\n        });\r\n    };\r\n\r\n    // Default settings\r\n    $.fn[plugin].defaults = {\r\n        context      : null,\r\n        mask         : true,\r\n        observe      : false,\r\n        topOffset    : 0,\r\n        bottomOffset : 0,\r\n        scrollSpace  : 200,\r\n        classNames : {\r\n            stick  : 'stick',\r\n            bound  : 'bound',\r\n            mask   : 'sticky-mask'\r\n        },\r\n        onStick   : function() {},\r\n        onUnStick : function() {},\r\n        onBound   : function() {},\r\n        onUnBound : function() {}\r\n    };\r\n\r\n})(jQuery, window, document);\r\n","/**\r\n * Tab plugin.\r\n *\r\n * @package Fundament\r\n */\r\n;(function($, window) {\r\n    'use strict';\r\n\r\n    var plugin   = 'tab',\r\n        methods  = [];\r\n\r\n    // Constructor\r\n    function Tab(element, settings) {\r\n        this.config = $.extend({}, $.fn[plugin].defaults, settings);\r\n        this.elem   = element;\r\n        this.$elem  = $(element);\r\n        this.init();\r\n    }\r\n\r\n    // Instance\r\n    $.extend(Tab.prototype, {\r\n\r\n        init: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    // Plugin definition\r\n    $.fn[plugin] = function(settings, args) {\r\n        return this.each(function() {\r\n            var data = $.data(this, plugin);\r\n\r\n            if ( ! data) {\r\n                $.data(this, plugin, new Tab(this, settings));\r\n            }\r\n            else if (typeof settings === 'string') {\r\n                methods.indexOf(settings) > -1 ?\r\n                    data[settings].apply(data, Array.isArray(args) ? args : [args]):\r\n                    console.warn(plugin + ': Trying to call a inaccessible method');\r\n            }\r\n        });\r\n    };\r\n\r\n    // Default settings\r\n    $.fn[plugin].defaults = {\r\n        classNames : {\r\n            tabs   : 'menu--tabs',\r\n            item   : 'menu__item',\r\n            link   : 'menu__link'\r\n        },\r\n        onOpen   : function() {},\r\n        onSelect : function() {},\r\n        onClose  : function() {}\r\n    };\r\n\r\n})(jQuery, window);\r\n","/**\n * Transition plugin.\n *\n * @package Fundament\n */\n;(function($) {\n    'use strict';\n\n    var plugin = 'transition';\n\n    var transitionEndEvent = Fm.transitionEnd();\n\n    // Constructor\n    function Transition(element, animation, settings, onEnd) {\n        var self = this;\n\n        self.config = $.extend({}, $.fn[plugin].defaults, settings);\n        self.elem   = element;\n        self.$elem  = $(element);\n\n        if (typeof onEnd === 'function')\n            self.config.onEnd = onEnd; // onEnd shorthand\n        if (settings == parseInt(settings))\n            self.config.duration = settings; // duration shorthand\n        else if (typeof settings === 'function')\n            self.config.onEnd = settings; // onEnd shorthand\n\n        (self.config.queue) ?\n            self.$elem.queue(function() {\n                self.init(animation);\n            }): self.init(animation);\n    }\n\n    // Instance\n    $.extend(Transition.prototype, {\n\n        init: function(animation) {\n            var self   = this,\n                config = self.config;\n\n            self.animation = self.parse(animation);\n\n            if (self.animation === 'display') {\n                return self.end();\n            } else if ( ! config.animations.hasOwnProperty(self.animation)) {\n                return console.warn('Trying to call an undefined animation');\n            }\n\n            if (transitionEndEvent) {\n                self.$elem\n                    .off(transitionEndEvent) // prevent any interruptions\n                    .one(transitionEndEvent, function(e) {\n                        e.stopPropagation(); // prevent event bubbling\n                        self.end();\n                    });\n            } else {\n                // Set a timer which functions as a fallback for the\n                // unsupported transitionEnd event.\n                setTimeout(self.end.bind(self), config.duration + config.delay);\n            }\n\n\n            // Create a separate queue entry to make sure previous\n            // re-draw events are finished. This also notifies the\n            // browser that the element is soon going to be animated.\n            var fire = function() {\n                requestAnimationFrame(self.start.bind(self));\n            };\n\n            config.delay ? fire() : setTimeout(fire, config.delay);\n        },\n\n        /**\n         * Parses the animation and determines the transition direction.\n         * Returns the base name of the animation.\n         *\n         * @param {string} animation\n         * @return {string}\n         */\n        parse: function(animation) {\n            if (animation.slice(-2) === 'In') {\n                this.direction = 'inward';\n                animation = animation.slice(0, -2);\n            } else if (animation.slice(-3) === 'Out') {\n                this.direction = 'outward';\n                animation = animation.slice(0, -3);\n            } else {\n                this.direction = this.$elem.is(':visible') ? // toggle\n                    'outward':\n                    'inward' ;\n            }\n\n            return animation;\n        },\n\n        /**\n         * Start the transition.\n         */\n        start: function() {\n            var self = this;\n\n            self.config.onStart.call(self.elem);\n\n            self.$elem\n                .css(self.style('start')) // apply start CSS\n                .show(); // ensure visibility\n\n            requestAnimationFrame(function() {\n                self.$elem.css(self.style('end')); // apply end CSS\n            });\n        },\n\n        /**\n         * End the transition.\n         */\n        end: function() {\n            var self  = this;\n\n            self.toggleDisplay();\n\n            self.config.onEnd.call(self.elem);\n\n            self.$elem.css({\n                'opacity'          : '',\n                'transform'        : '',\n                'transform-origin' : '',\n                'transition'       : ''\n            });\n\n            if (self.config.queue)\n                requestAnimationFrame(function() {\n                    self.$elem.dequeue();\n                });\n        },\n\n        /**\n         * Toggle the display.\n         */\n        toggleDisplay: function() {\n            this.direction === 'inward' ?\n                this.$elem.show():\n                this.$elem.hide();\n\n            if (this.elem.hasAttribute('aria-hidden')) {\n                this.$elem.attr('aria-hidden', this.direction !== 'inward');\n            }\n        },\n\n        /**\n         * Get the inline style for the transition.\n         *\n         * @param {string} state\n         */\n        style: function(state) {\n            var self = this,\n                animation = self.config.animations[self.animation],\n                direction = self.direction,\n                css;\n\n            if (state === 'start') {\n                css = (direction === 'inward') ?\n                    animation.start:\n                    animation.end; // reversed\n\n                css.transition = null;\n            } else {\n                css = (direction === 'inward') ?\n                    animation.end:\n                    animation.start; // reversed\n\n                css.transition = 'all ' +\n                    self.config.duration + 'ms ' +\n                    self.config.curve;\n            }\n\n            for (var prop in css) {\n                var prefixed = Fm.prefixProp(prop); // prefix attributes\n                if (prefixed !== prop)\n                    css[prefixed] = css[prop];\n            }\n\n            return css;\n        }\n    });\n\n    // Plugin definition\n    $.fn[plugin] = function(animation, settings, onEnd) {\n        return this.each(function() {\n            new Transition(this, animation, settings, onEnd);\n        });\n    };\n\n    // Default settings\n    $.fn[plugin].defaults = {\n        duration : 280,\n        delay    : 0,\n        curve    : 'ease',\n        queue    : true,\n        onStart  : function() {},\n        onEnd    : function() {}\n    };\n\n    $.fn[plugin].defaults.animations = {\n        // fade\n        fade: {\n            start : { 'opacity': 0 },\n            end   : { 'opacity': 1 }\n        },\n        fadeUp: {\n            start : { 'opacity': 0, 'transform': 'translateY(10%)' },\n            end   : { 'opacity': 1, 'transform': 'translateY(0)' }\n        },\n        fadeDown: {\n            start : { 'opacity': 0, 'transform': 'translateY(-10%)' },\n            end   : { 'opacity': 1, 'transform': 'translateY(0)' }\n        },\n\n        // scale\n        scale: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)' }\n        },\n        scaleUp: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)', 'transform-origin': 'bottom' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)', 'transform-origin': 'bottom' }\n        },\n        scaleDown: {\n            start : { 'opacity': 0, 'transform': 'scale(0.6)', 'transform-origin': 'top' },\n            end   : { 'opacity': 1, 'transform': 'scale(1.0)', 'transform-origin': 'top' }\n        },\n\n        // slide\n        slideUp: {\n            start : { 'opacity': 0.2, 'transform': 'scaleY(0.01)', 'transform-origin': 'bottom'},\n            end   : { 'opacity': 1, 'transform': 'scaleY(1)', 'transform-origin': 'bottom'}\n        },\n        slideDown: {\n            start : { 'opacity': 0.2, 'transform': 'scaleY(0.01)', 'transform-origin': 'top'},\n            end   : { 'opacity': 1, 'transform': 'scaleY(1)', 'transform-origin': 'top'}\n        },\n\n        // flip\n        flipX: {\n            start : { 'opacity': 0, 'transform': 'perspective(2000px) rotateY(-90deg)' },\n            end   : { 'opacity': 1, 'transform': 'perspective(2000px) rotateY(0deg)' }\n        },\n        flipY: {\n            start : { 'opacity': 0, 'transform': 'perspective(2000px) rotateX(-90deg)' },\n            end   : { 'opacity': 1, 'transform': 'perspective(2000px) rotateX(0deg)' }\n        }\n    };\n\n})(jQuery);\n"]}