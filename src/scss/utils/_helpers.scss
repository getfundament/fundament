// Textual
.text-primary  { color: $color-primary; }
.text-positive { color: $color-positive; }
.text-warning  { color: $color-warning; }
.text-negative { color: $color-negative; }
.text-muted    { color: $color-gray-dark; }

@each $size, $breakpoint in $grid-breakpoints {
    @include breakpoint-up($size) {

        @each $align in (left, center, right) {
            $name: if($size == xs, $align, #{$size}-#{$align}); // xs shorthand

            .text-#{$name} {
                text-align: $align;
            }
        }

    }
}

// Backgrounds
.bg-primary  { background-color: $color-primary; color: #FFF; }
.bg-positive { background-color: $color-positive; color: #FFF; }
.bg-warning  { background-color: $color-warning; color: #FFF; }
.bg-negative { background-color: $color-negative; color: #FFF; }

// Images
.img-responsive { // TODO: reconsider
    max-width: 100%;
    height: auto;
    display: block;
}
.img-fluid {
    width: 100%;
    height: auto;
    display: block;
}

// Block elements
.block-center {
    margin-left: auto;
    margin-right: auto;
}
.align-center {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
}

// Spacing
@each $size, $breakpoint in $grid-breakpoints {
    @include breakpoint-up($size) {

        @each $dir, $abbr in (top: t, right: r, bottom: b, left: l) {
            @for $i from 1 through 5 {
                $name: if($size == xs, #{$abbr}-#{$i}, #{$abbr}-#{$size}-#{$i}); // xs shorthand

                .m#{$name} { // margin
                    margin-#{$dir}: $i * 0.5rem;
                }
                .p#{$name} { // padding
                    padding-#{$dir}: $i * 0.5rem;
                }
            }
        }

    }
}

// Clearfix
.clear:after {
    content: " ";
    display: table;
    clear: both;
}

// Screen readers
.sr-content {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
}
